var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.686,1,2.154]],["body/controllers/AppController.html",[0,2.651,1,3.387,2,2.364,3,0.468,4,0.468,5,0.403,6,3.123,7,0.536,8,1.449,9,3.892,10,1.541,11,0.038,12,0.765,13,3.784,14,1.15,15,1.072,16,0.589,17,0.851,18,2.349,19,2.688,20,0.468,21,0.023,22,3.123,23,1.703,24,1.268,25,3.123,26,0.029,27,0.029]],["title/modules/AppModule.html",[28,1.365,29,1.894]],["body/modules/AppModule.html",[3,0.317,4,0.317,5,0.273,11,0.038,16,0.691,17,0.576,18,2.315,19,1.821,20,0.317,21,0.016,26,0.023,27,0.023,28,1.927,29,3.493,30,1.279,31,1.279,32,1.601,33,1.601,34,1.279,35,2.674,36,1.601,37,2.115,38,2.115,39,2.115,40,2.859,41,2.566,42,2.29,43,1.601,44,1.601,45,2.563,46,3.041,47,2.115,48,1.601,49,2.29,50,2.563,51,2.563,52,0.859,53,2.29,54,2.563,55,3.666,56,4.28,57,2.115,58,2.115,59,3.666,60,2.115,61,1.821,62,2.563,63,2.563,64,2.563,65,2.563,66,2.563,67,2.563,68,0.518,69,4.28,70,2.563,71,2.563,72,2.563,73,2.563,74,2.563,75,2.563,76,1.279,77,2.563,78,1.601,79,2.563,80,2.563,81,2.563,82,2.563,83,2.563,84,2.039,85,2.563,86,2.563,87,2.563,88,1.821]],["title/classes/AppResolver.html",[21,0.019,49,1.894]],["body/classes/AppResolver.html",[3,0.425,4,0.425,5,0.366,7,0.487,8,1.363,9,3.756,10,1.401,11,0.037,12,0.906,14,1.046,15,0.774,16,0.554,18,2.53,19,2.444,20,0.425,21,0.021,22,2.84,23,1.548,24,1.153,25,2.84,26,0.028,27,0.028,49,2.801,52,1.153,68,0.695,89,1.548,90,2.84,91,2.774,92,2.49,93,1.717,94,3.44,95,3.44,96,1.401,97,1.046,98,1.401,99,3.44,100,3.44,101,3.44,102,3.702,103,3.702]],["title/injectables/AppService.html",[18,1.365,104,0.682]],["body/injectables/AppService.html",[3,0.492,4,0.492,5,0.424,7,0.564,8,1.496,9,3.964,11,0.037,12,0.805,14,1.211,15,1.107,16,0.492,17,0.895,18,2.215,20,0.492,21,0.025,24,1.335,26,0.03,27,0.03,104,1.107,105,1.793,106,3.288,107,3.983,108,3.983,109,3.983]],["title/controllers/AuthController.html",[0,1.686,110,1.894]],["body/controllers/AuthController.html",[0,1.518,2,1.705,3,0.338,4,0.338,5,0.291,7,0.387,8,1.166,10,1.562,11,0.038,12,0.775,14,1.348,15,0.862,16,0.594,17,0.614,20,0.338,21,0.017,24,1.285,26,0.024,27,0.024,68,0.552,93,1.362,96,1.562,97,1.166,98,1.562,110,2.395,111,2.254,112,2.73,113,4.432,114,3.835,115,3.165,116,2.73,117,2.73,118,2.73,119,3.835,120,2.73,121,3.28,122,2.73,123,2.73,124,2.73,125,2.73,126,2.73,127,2.73,128,2.73,129,3.165,130,2.212,131,2.254,132,2.73,133,2.73,134,1.518,135,2.254,136,2.73,137,3.835,138,2.73,139,2.725,140,2.73,141,3.835,142,2.73,143,2.73,144,2.73,145,2.73,146,2.254,147,2.73,148,2.254,149,2.73,150,1.518,151,2.73,152,2.73,153,2.73,154,2.73,155,2.73,156,2.73,157,2.73,158,2.73,159,2.73]],["title/guards/AuthGuard.html",[134,1.686,160,2.154]],["body/guards/AuthGuard.html",[3,0.269,4,0.269,5,0.232,7,0.308,8,0.989,11,0.038,12,0.787,14,0.989,15,0.731,16,0.6,17,0.489,20,0.269,21,0.013,24,1.305,26,0.02,27,0.02,68,0.935,84,1.808,92,1.943,93,1.622,96,1.586,97,1.184,98,1.586,104,0.731,129,3.214,134,1.808,150,2.572,161,2.175,162,1.795,163,4.321,164,3.251,165,2.175,166,4.006,167,5.03,168,2.175,169,3.251,170,4.321,171,2.175,172,2.175,173,1.463,174,3.251,175,4.321,176,2.175,177,3.894,178,3.214,179,1.358,180,1.358,181,1.795,182,1.545,183,1.545,184,1.545,185,2.175,186,1.545,187,2.572,188,2.684,189,2.175,190,2.175,191,2.175,192,2.175,193,2.175,194,2.175,195,4.321,196,2.175,197,2.031,198,1.622,199,2.175,200,3.214,201,1.209,202,2.175,203,1.545,204,1.795,205,2.175,206,2.175,207,1.795,208,2.175,209,2.175,210,2.175,211,2.175,212,2.175,213,2.175,214,2.175,215,2.175]],["title/modules/AuthModule.html",[28,1.365,40,1.686]],["body/modules/AuthModule.html",[2,2.347,3,0.328,4,0.328,5,0.283,11,0.038,16,0.696,17,0.596,20,0.328,21,0.016,26,0.023,27,0.023,28,1.964,30,1.323,31,1.323,32,1.657,33,1.657,34,1.323,35,2.725,36,2.725,40,3.09,41,2.595,42,2.347,43,1.657,44,1.657,46,2.669,58,2.189,84,1.475,88,2.669,110,2.725,130,2.871,131,2.189,134,2.089,135,2.189,179,1.657,180,1.657,181,2.189,183,1.884,203,1.884,204,2.189,216,2.189,217,2.189,218,2.652,219,2.189,220,2.652,221,2.652,222,1.53,223,1.657,224,2.089,225,2.189,226,2.652,227,3.757,228,2.652,229,2.652,230,2.652,231,2.652,232,2.652,233,3.101]],["title/injectables/AuthService.html",[104,0.682,130,1.513]],["body/injectables/AuthService.html",[3,0.303,4,0.303,5,0.261,7,0.347,8,1.079,11,0.038,12,0.717,14,0.745,15,1.139,16,0.6,17,0.798,20,0.303,21,0.015,23,1.103,24,0.821,26,0.022,27,0.022,68,0.717,76,1.771,92,2.082,93,1.771,96,1.446,97,1.079,98,1.446,104,0.798,105,1.103,115,2.93,130,1.771,150,2.321,166,4.312,173,1.597,178,2.93,179,1.53,187,2.321,197,1.53,198,1.222,200,2.022,201,2.321,222,2.128,223,1.53,234,2.022,235,2.022,236,2.279,237,2.45,238,3.549,239,4.576,240,2.45,241,2.45,242,2.45,243,2.522,244,2.45,245,2.45,246,4.173,247,2.45,248,3.549,249,2.45,250,2.45,251,2.45,252,2.45,253,2.45,254,2.45,255,2.45,256,2.45,257,2.45,258,2.45,259,2.45,260,2.45,261,2.45,262,2.45,263,2.45,264,2.45,265,2.45]],["title/injectables/BcryptService.html",[104,0.682,224,1.686]],["body/injectables/BcryptService.html",[3,0.365,4,0.365,5,0.315,7,0.418,8,1.231,11,0.038,12,0.818,14,1.231,15,1.28,16,0.571,17,0.664,20,0.365,21,0.018,24,1.357,26,0.025,27,0.025,68,0.818,92,2.306,96,1.649,97,1.231,98,1.649,104,0.91,105,1.329,173,2.238,186,2.098,187,1.642,201,1.642,222,1.649,224,2.251,266,2.437,267,3.814,268,3.814,269,3.814,270,4.441,271,4.104,272,2.953,273,3.342,274,3.814,275,2.953,276,4.049,277,2.437,278,2.953,279,4.049]],["title/classes/CreateUserInput.html",[21,0.019,280,1.513]],["body/classes/CreateUserInput.html",[3,0.304,4,0.304,5,0.262,7,0.348,10,2.13,11,0.037,12,1.056,15,1.246,16,0.44,20,0.304,21,0.022,23,2.659,26,0.022,27,0.022,52,0.823,68,1.056,76,2.086,78,2.611,89,1.106,97,1.271,280,1.775,281,4.42,282,1.746,283,1.775,284,3.451,285,3.451,286,3.451,287,3.451,288,3.256,289,3.557,290,2.457,291,2.457,292,2.457,293,2.457,294,3.557,295,2.457,296,2.457,297,2.457,298,2.028,299,2.457,300,2.028,301,2.457,302,2.457,303,3.344,304,2.527,305,3.557,306,2.936,307,4.014,308,2.028,309,4.18,310,2.028,311,2.457,312,1.535,313,2.028,314,2.028,315,2.936,316,2.457]],["title/injectables/GraphqlOptions.html",[53,1.894,104,0.682]],["body/injectables/GraphqlOptions.html",[3,0.445,4,0.445,5,0.384,7,0.51,8,1.405,11,0.038,12,0.728,14,1.096,16,0.631,17,0.81,20,0.445,21,0.022,24,1.208,26,0.028,27,0.028,52,1.208,53,2.887,60,4.211,61,2.561,84,2.57,104,1.039,105,1.622,173,2.08,186,2.561,317,2.975,318,5.381,319,3.604,320,4.621,321,3.604,322,3.604,323,3.604,324,3.604]],["title/injectables/HashingService.html",[104,0.682,222,1.235]],["body/injectables/HashingService.html",[3,0.4,4,0.4,5,0.345,7,0.459,8,1.311,11,0.037,12,0.871,14,1.311,15,1.305,16,0.4,17,0.728,20,0.4,21,0.02,26,0.027,27,0.027,68,0.871,96,1.756,97,1.311,98,1.756,104,0.969,105,1.458,173,2.324,222,1.756,267,3.558,268,3.558,269,3.558,270,4.564,271,3.999,273,3.558,274,3.558,325,2.674,326,5.643,327,3.24,328,3.24]],["title/classes/SignInDto.html",[21,0.019,121,1.894]],["body/classes/SignInDto.html",[3,0.429,4,0.429,5,0.37,7,0.491,10,1.837,11,0.037,12,0.911,15,1.192,16,0.557,20,0.429,21,0.028,23,2.255,26,0.028,27,0.028,52,1.163,68,0.911,76,2.5,78,3.129,89,1.561,121,2.816,283,2.25,298,2.863,300,2.863,303,3.129,304,3.203,306,3.722,307,4.135,308,2.863,312,2.167,313,2.863,314,2.863,329,4.135,330,2.863,331,3.469,332,3.469]],["title/classes/UpdateUserInput.html",[21,0.019,333,1.686]],["body/classes/UpdateUserInput.html",[3,0.514,4,0.514,5,0.443,11,0.037,16,0.625,20,0.514,21,0.026,26,0.031,27,0.031,52,1.395,89,1.873,280,2.077,282,2.957,304,3.592,333,2.811,334,3.435,335,4.162,336,3.435,337,3.435,338,4.162,339,4.162]],["title/entities/Users.html",[340,2.154,341,1.513]],["body/entities/Users.html",[3,0.32,4,0.32,5,0.276,7,0.366,10,2.211,11,0.037,12,1.097,15,1.26,16,0.456,20,0.32,21,0.016,26,0.023,27,0.023,52,0.867,68,1.097,76,2.147,78,2.688,97,1.308,283,1.841,284,3.552,285,3.552,286,3.552,287,3.552,288,3.665,303,3.451,340,2.622,341,1.841,342,2.135,343,2.135,344,3.525,345,5.158,346,2.586,347,2.586,348,2.586,349,2.586,350,2.586,351,2.586,352,2.586,353,3.69,354,2.586,355,2.586,356,2.586,357,3.69,358,5.428,359,1.838,360,3.69,361,2.586]],["title/classes/UsersArgs.html",[21,0.019,362,1.686]],["body/classes/UsersArgs.html",[3,0.418,4,0.418,5,0.361,7,0.479,10,1.807,11,0.038,12,0.896,16,0.548,20,0.418,21,0.027,26,0.027,27,0.027,52,1.134,68,0.896,89,1.523,283,2.214,288,3.152,303,3.092,310,2.794,312,2.114,315,2.794,362,2.467,363,2.794,364,4.086,365,4.086,366,3.662,367,3.662,368,4.437,369,3.384,370,3.384,371,3.662,372,3.384,373,3.384,374,4.437,375,4.95,376,3.384,377,3.384,378,3.384]],["title/modules/UsersModule.html",[28,1.365,41,1.513]],["body/modules/UsersModule.html",[3,0.384,4,0.384,5,0.331,11,0.038,16,0.69,17,0.699,20,0.384,21,0.019,26,0.026,27,0.026,28,2.135,30,1.55,31,1.55,32,1.941,33,1.941,34,1.55,35,2.963,36,2.963,41,2.786,42,2.618,43,1.941,44,1.941,46,2.207,47,2.565,48,1.941,88,2.207,222,1.707,223,1.941,224,2.331,225,2.565,233,2.565,236,2.66,341,1.55,379,2.565,380,2.565,381,2.565,382,3.107,383,2.565,384,2.618,385,3.107,386,2.207,387,3.107]],["title/classes/UsersResolver.html",[21,0.019,384,1.894]],["body/classes/UsersResolver.html",[3,0.204,4,0.204,5,0.175,7,0.233,8,0.797,10,1.766,11,0.038,12,0.919,14,1.383,15,1.145,16,0.536,17,0.37,20,0.204,21,0.01,23,0.741,24,1.453,26,0.016,27,0.016,52,0.552,68,0.919,89,0.741,91,3.207,92,2.766,93,1.309,96,1.852,97,1.383,98,1.852,102,3.076,103,2.165,150,0.916,173,2.332,187,0.916,197,1.028,198,0.822,201,1.817,235,1.359,236,1.951,243,2.891,280,2.163,333,2.625,341,2.489,344,3.354,362,2.831,383,1.359,384,1.638,386,1.17,388,1.359,389,3.268,390,2.622,391,3.268,392,2.622,393,1.646,394,1.646,395,3.268,396,1.646,397,1.646,398,1.646,399,1.646,400,1.646,401,1.646,402,3.268,403,1.646,404,1.646,405,1.646,406,1.646,407,1.646,408,2.622,409,1.359,410,1.646,411,3.727,412,1.646,413,1.646,414,1.646,415,2.622,416,1.646,417,1.646,418,1.646,419,1.646,420,1.646,421,1.646,422,1.646,423,1.646,424,1.646,425,1.646,426,1.646,427,1.646,428,1.646,429,1.646,430,1.646]],["title/injectables/UsersService.html",[104,0.682,236,1.365]],["body/injectables/UsersService.html",[3,0.199,4,0.199,5,0.172,7,0.228,8,0.784,11,0.038,12,0.911,14,1.306,15,1.159,16,0.579,17,0.362,20,0.199,21,0.01,23,1.16,24,1.439,26,0.016,27,0.016,48,1.007,68,0.911,76,1.608,91,3.07,92,2.754,93,1.286,96,1.837,97,1.371,98,1.837,104,0.58,105,0.725,146,2.128,150,1.433,173,2.319,187,2.239,197,1.61,198,1.286,201,2.239,222,1.837,223,1.007,236,1.16,243,3.204,280,2.143,333,2.605,336,2.128,337,2.128,341,0.804,344,3.52,359,1.145,362,2.388,364,2.128,365,2.128,386,1.145,409,1.33,431,1.33,432,2.578,433,2.578,434,2.578,435,2.578,436,2.659,437,1.611,438,3.682,439,1.611,440,2.578,441,2.578,442,1.611,443,2.578,444,1.611,445,2.578,446,1.611,447,2.578,448,1.611,449,2.578,450,1.611,451,1.611,452,1.611,453,1.611,454,1.611,455,1.611,456,1.611,457,1.611,458,2.578,459,1.611,460,1.611,461,1.611,462,2.578,463,2.578,464,2.578,465,1.611,466,2.578,467,2.578,468,1.611,469,1.611,470,1.611]],["title/coverage.html",[471,2.929]],["body/coverage.html",[0,2.016,1,1.793,5,0.269,6,2.083,11,0.037,18,1.136,21,0.032,26,0.022,27,0.022,34,1.259,49,1.576,53,1.576,68,0.51,90,2.083,91,1.403,104,1.15,106,2.083,110,1.576,111,2.083,121,1.576,130,1.259,134,1.403,160,1.793,162,2.083,180,1.576,184,1.793,198,1.259,222,1.028,224,1.403,234,2.083,236,1.136,266,2.083,280,1.259,281,2.083,282,2.576,317,2.083,325,2.083,329,2.083,330,2.083,333,1.403,334,2.083,340,1.793,341,1.809,343,2.993,362,1.403,363,2.083,371,4.992,384,1.576,388,2.083,431,2.083,471,1.793,472,2.083,473,2.524,474,2.524,475,4.244,476,5.271,477,2.524,478,2.083,479,5.116,480,5.492,481,2.993,482,2.083,483,2.524,484,3.503,485,2.083,486,2.083,487,2.083,488,4.244,489,2.524,490,2.524,491,2.524]],["title/dependencies.html",[31,1.817,492,2.096]],["body/dependencies.html",[11,0.038,17,0.662,21,0.025,26,0.025,27,0.025,31,1.468,48,1.838,52,0.986,57,2.429,61,2.091,179,1.838,182,2.87,183,2.091,277,2.429,312,1.838,359,2.091,493,2.942,494,2.942,495,4.612,496,2.942,497,4.039,498,2.942,499,2.942,500,2.942,501,2.942,502,4.039,503,2.942,504,2.942,505,2.942,506,2.942,507,2.942,508,2.942,509,4.039,510,2.942,511,2.942,512,4.612,513,4.612,514,2.942,515,2.429,516,2.942,517,2.942,518,2.942,519,2.942,520,2.942,521,4.964,522,2.942,523,4.039,524,2.942,525,2.942,526,2.942,527,2.942,528,2.942,529,2.942,530,2.942,531,2.942,532,2.942,533,2.942,534,2.942,535,2.942,536,2.942,537,2.942,538,2.942,539,2.942,540,2.942,541,2.942,542,2.942,543,2.942]],["title/miscellaneous/functions.html",[544,1.586,545,3.007]],["body/miscellaneous/functions.html",[7,0.647,11,0.033,26,0.033,27,0.033,34,2.828,482,3.774,544,2.856,545,3.774,546,4.573]],["title/index.html",[7,0.36,547,2.539,548,2.539]],["body/index.html",[11,0.038,26,0.028,27,0.028,139,2.465,148,3.722,471,2.465,472,2.863,549,3.469,550,3.469,551,3.469,552,3.469,553,5.304,554,5.635,555,3.469,556,3.469,557,4.509,558,3.469,559,3.469,560,3.469,561,3.469,562,3.469,563,5.635,564,3.469,565,3.469,566,4.509,567,4.509,568,3.469,569,3.469,570,3.469,571,3.469,572,3.469,573,3.469,574,3.469,575,3.469,576,3.469,577,3.469,578,3.469]],["title/modules.html",[30,2.057]],["body/modules.html",[11,0.032,26,0.032,27,0.032,29,2.736,30,2.186,40,2.436,41,2.186,579,5.567,580,5.567,581,5.567,582,5.567]],["title/overview.html",[583,3.403]],["body/overview.html",[2,2.039,11,0.036,18,2.189,26,0.027,27,0.027,28,1.47,29,3.586,30,1.629,31,1.629,32,2.039,33,2.039,34,1.629,35,2.039,36,2.039,37,2.695,38,2.695,39,2.695,40,3.193,41,2.821,42,2.707,43,2.039,44,2.039,89,1.47,105,1.47,130,2.821,160,2.32,216,2.695,217,2.695,219,2.695,236,2.545,342,2.695,379,2.695,380,2.695,381,2.695,583,2.695,584,3.265,585,3.265,586,4.333,587,3.265,588,3.265]],["title/properties.html",[283,1.817,492,2.096]],["body/properties.html",[11,0.037,26,0.033,27,0.033,139,3.196,283,2.245,589,4.499,590,4.499,591,4.499,592,4.499,593,4.499]],["title/miscellaneous/variables.html",[544,1.586,594,3.007]],["body/miscellaneous/variables.html",[7,0.435,11,0.038,15,0.691,26,0.026,27,0.026,68,0.841,84,1.709,91,2.313,97,0.934,180,2.598,182,2.183,184,2.956,188,2.536,198,2.778,203,2.183,207,2.536,366,4.494,367,4.494,436,2.536,478,2.536,481,2.536,484,2.536,485,3.893,486,3.434,487,3.434,515,2.536,544,1.919,594,2.536,595,4.16,596,3.073,597,4.716,598,3.073,599,3.073,600,3.073,601,3.073,602,3.073,603,3.073,604,4.16,605,3.073,606,3.073,607,3.073,608,3.073,609,3.073,610,3.073,611,3.073,612,3.073,613,3.073,614,3.073,615,3.073,616,3.073,617,3.073,618,3.073,619,3.073]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":371,"title":{},"body":{"classes/UsersArgs.html":{},"coverage.html":{}}}],["0.0.1",{"_index":590,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["0.32.4",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["0.33.3",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["0.45.1",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":586,"title":{},"body":{"overview.html":{}}}],["1.18.1",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["10.2.8",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["12.0.11",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["13.3.0",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["16.8.1",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":585,"title":{},"body":{"overview.html":{}}}],["2.0.4",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["25",{"_index":368,"title":{},"body":{"classes/UsersArgs.html":{}}}],["3",{"_index":584,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["5.1.1",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":587,"title":{},"body":{"overview.html":{}}}],["60",{"_index":353,"title":{},"body":{"entities/Users.html":{}}}],["60s",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["7",{"_index":588,"title":{},"body":{"overview.html":{}}}],["7.1.16",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":326,"title":{},"body":{"injectables/HashingService.html":{}}}],["access",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["access_token",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["age",{"_index":284,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{}}}],["app",{"_index":556,"title":{},"body":{"index.html":{}}}],["app.resolver",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{}}}],["app_guard",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appresolver",{"_index":49,"title":{"classes/AppResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"coverage.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":410,"title":{},"body":{"classes/UsersResolver.html":{}}}],["args('createuserinput",{"_index":424,"title":{},"body":{"classes/UsersResolver.html":{}}}],["args('id",{"_index":426,"title":{},"body":{"classes/UsersResolver.html":{}}}],["args('updateuserinput",{"_index":427,"title":{},"body":{"classes/UsersResolver.html":{}}}],["argstype",{"_index":374,"title":{},"body":{"classes/UsersArgs.html":{}}}],["assigning",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":92,"title":{},"body":{"classes/AppResolver.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guards",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.service",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":110,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":134,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":593,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":130,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["autoschemafile",{"_index":321,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["await",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["b3",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["backend",{"_index":550,"title":{},"body":{"index.html":{}}}],["base",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["bcrypt",{"_index":277,"title":{},"body":{"injectables/BcryptService.html":{},"dependencies.html":{}}}],["bcryptservice",{"_index":224,"title":{"injectables/BcryptService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["bearer",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":582,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":579,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":270,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["canactivate",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{}}}],["class",{"_index":21,"title":{"classes/AppResolver.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":89,"title":{},"body":{"classes/AppResolver.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":379,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":380,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":381,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":358,"title":{},"body":{"entities/Users.html":{}}}],["compare",{"_index":267,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["compare(data",{"_index":269,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["compodoc/compodoc",{"_index":575,"title":{},"body":{"index.html":{}}}],["compose",{"_index":560,"title":{},"body":{"index.html":{}}}],["condition",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{}}}],["config",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_host",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_name",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_password",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_port",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_user",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constants",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(appservice",{"_index":94,"title":{},"body":{"classes/AppResolver.html":{}}}],["constructor(jwtservice",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{}}}],["constructor(usersrepository",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersResolver.html":{}}}],["containers",{"_index":558,"title":{},"body":{"index.html":{}}}],["context",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.getclass",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.gethandler",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["conventions",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":471,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":336,"title":{},"body":{"classes/UpdateUserInput.html":{},"injectables/UsersService.html":{}}}],["create(createuserinput",{"_index":441,"title":{},"body":{"injectables/UsersService.html":{}}}],["creategqloptions",{"_index":318,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["createuser",{"_index":389,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(createuserinput",{"_index":394,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":280,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserinput.password",{"_index":463,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":273,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["database",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"controllers/AuthController.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{}}}],["decorators/public.decorator",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["default",{"_index":366,"title":{},"body":{"classes/UsersArgs.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":562,"title":{},"body":{"index.html":{}}}],["disable",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["docker",{"_index":559,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":472,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["driver",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":412,"title":{},"body":{"classes/UsersResolver.html":{}}}],["dto/create",{"_index":454,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/update",{"_index":455,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/users.args",{"_index":456,"title":{},"body":{"injectables/UsersService.html":{}}}],["email",{"_index":285,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{}}}],["encrypted",{"_index":271,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["endpoint",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["entities",{"_index":342,"title":{},"body":{"entities/Users.html":{},"overview.html":{}}}],["entities/users.entity",{"_index":386,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":340,"title":{"entities/Users.html":{}},"body":{"entities/Users.html":{},"coverage.html":{}}}],["eslint",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["eslint/no",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":553,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{}}}],["expects",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":338,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["extracttokenfromheader",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{}}}],["fakesecret_1234567890",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fastify",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fastifyinstrumentation",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fastifyrequest",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["female",{"_index":294,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field",{"_index":303,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{}}}],["field()@column",{"_index":345,"title":{},"body":{"entities/Users.html":{}}}],["field()@column({length",{"_index":352,"title":{},"body":{"entities/Users.html":{}}}],["field()@isemail",{"_index":291,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@isint()@min(0",{"_index":289,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@isnotempty()@isstring()@maxlength(60",{"_index":298,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["field()@isstring",{"_index":296,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@isstring()@isin(['male",{"_index":293,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@isstring()@maxlength(40",{"_index":300,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["field(undefined)@min(0",{"_index":372,"title":{},"body":{"classes/UsersArgs.html":{}}}],["field(undefined)@min(1)@max(50",{"_index":369,"title":{},"body":{"classes/UsersArgs.html":{}}}],["field(undefined)@primarygeneratedcolumn",{"_index":349,"title":{},"body":{"entities/Users.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(usersargs",{"_index":443,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(username",{"_index":445,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{}}}],["found",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["function",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":545,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":286,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{}}}],["generate",{"_index":573,"title":{},"body":{"index.html":{}}}],["gensalt",{"_index":276,"title":{},"body":{"injectables/BcryptService.html":{}}}],["get('profile",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":547,"title":{"index.html":{}},"body":{}}],["global",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["gqloptionsfactory",{"_index":320,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["graphiql",{"_index":324,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["graphql",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["graphql.options",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqloptions",{"_index":53,"title":{"injectables/GraphqlOptions.html":{}},"body":{"modules/AppModule.html":{},"injectables/GraphqlOptions.html":{},"coverage.html":{}}}],["guard",{"_index":160,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handlers",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hash",{"_index":268,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["hash(data",{"_index":274,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["hashing.service",{"_index":278,"title":{},"body":{"injectables/BcryptService.html":{}}}],["hashingservice",{"_index":222,"title":{"injectables/HashingService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["hello",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["host",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["hot",{"_index":566,"title":{},"body":{"index.html":{}}}],["http",{"_index":515,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["http://srvrdtek2.eyc.com:7618/v1/traces",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('login",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpinstrumentation",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":344,"title":{},"body":{"entities/Users.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["in.dto",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["in.dto.ts",{"_index":330,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:15",{"_index":331,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:9",{"_index":332,"title":{},"body":{"classes/SignInDto.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":104,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":453,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(users",{"_index":457,"title":{},"body":{"injectables/UsersService.html":{}}}],["inputtype",{"_index":304,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{}}}],["installation",{"_index":552,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":555,"title":{},"body":{"index.html":{}}}],["instrumentation",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instrumentations",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instrumented",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["int",{"_index":375,"title":{},"body":{"classes/UsersArgs.html":{}}}],["is_public_key",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":305,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isin",{"_index":311,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isin(['male",{"_index":316,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isint",{"_index":309,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isnotempty",{"_index":306,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["ispublic",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":307,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["isvalid",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsdoc",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwtconstants",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["layer",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":361,"title":{},"body":{"entities/Users.html":{}}}],["license",{"_index":591,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":364,"title":{},"body":{"classes/UsersArgs.html":{},"injectables/UsersService.html":{}}}],["line",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["localhost",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log('is",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log('pass",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log('user",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log('user?.password",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":376,"title":{},"body":{"classes/UsersArgs.html":{}}}],["max(50",{"_index":378,"title":{},"body":{"classes/UsersArgs.html":{}}}],["maxlength",{"_index":308,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["maxlength(40",{"_index":313,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["maxlength(60",{"_index":314,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["mercurius",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["mercuriusdriver",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["mercuriusdriverconfig",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphqlOptions.html":{}}}],["mercuriusjs/gateway",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["metadata",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":310,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UsersArgs.html":{}}}],["min(0",{"_index":315,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UsersArgs.html":{}}}],["min(1",{"_index":377,"title":{},"body":{"classes/UsersArgs.html":{}}}],["miscellaneous",{"_index":544,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":565,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mutation",{"_index":411,"title":{},"body":{"classes/UsersResolver.html":{}}}],["name",{"_index":97,"title":{},"body":{"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/HashingService.html":{},"entities/Users.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nestinstrumentation",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjs",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mercurius",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphqlOptions.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["node",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["nodesdk",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":409,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(`user",{"_index":462,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception(id",{"_index":423,"title":{},"body":{"classes/UsersResolver.html":{}}}],["npm",{"_index":554,"title":{},"body":{"index.html":{}}}],["npx",{"_index":574,"title":{},"body":{"index.html":{}}}],["number",{"_index":288,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{}}}],["object",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["objecttype",{"_index":360,"title":{},"body":{"entities/Users.html":{}}}],["offset",{"_index":365,"title":{},"body":{"classes/UsersArgs.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["oltpexporter",{"_index":485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetry/exporter",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/instrumentation",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/propagator",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/resources",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/sdk",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/semantic",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["optional",{"_index":98,"title":{},"body":{"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["otelsdk",{"_index":486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["otlp",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["otlptraceexporter",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":583,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":576,"title":{},"body":{"index.html":{}}}],["package",{"_index":492,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":416,"title":{},"body":{"classes/UsersResolver.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":418,"title":{},"body":{"classes/UsersResolver.html":{}}}],["partialtype",{"_index":335,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["partialtype(createuserinput",{"_index":339,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["pass",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["pass123",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["password",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{}}}],["payload",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["pg",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["poc",{"_index":549,"title":{},"body":{"index.html":{}}}],["port",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["primarygeneratedcolumn",{"_index":357,"title":{},"body":{"entities/Users.html":{}}}],["private",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":283,"title":{"properties.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"properties.html":{}}}],["proto",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["provide",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":91,"title":{},"body":{"classes/AppResolver.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@mutation(undefined",{"_index":395,"title":{},"body":{"classes/UsersResolver.html":{}}}],["public()@query(undefined",{"_index":402,"title":{},"body":{"classes/UsersResolver.html":{}}}],["query",{"_index":102,"title":{},"body":{"classes/AppResolver.html":{},"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":99,"title":{},"body":{"classes/AppResolver.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refresh",{"_index":567,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove(id",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["removeuser",{"_index":390,"title":{},"body":{"classes/UsersResolver.html":{}}}],["removeuser(@args('id",{"_index":429,"title":{},"body":{"classes/UsersResolver.html":{}}}],["removeuser(id",{"_index":397,"title":{},"body":{"classes/UsersResolver.html":{}}}],["repository",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["req",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":103,"title":{},"body":{"classes/AppResolver.html":{},"classes/UsersResolver.html":{}}}],["resource",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["route",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":563,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":578,"title":{},"body":{"index.html":{}}}],["salt",{"_index":279,"title":{},"body":{"injectables/BcryptService.html":{}}}],["scdi",{"_index":551,"title":{},"body":{"index.html":{}}}],["schema.gql",{"_index":322,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["secret",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{}}}],["semanticresourceattributes.service_name",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/hashing/bcrypt.service",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["shared/hashing/hashing.service",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["signin",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(username",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto",{"_index":121,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signindto.password",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplespanprocessor(traceexporter",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":460,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["spanprocessor",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tracing.ts",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.resolver.ts",{"_index":90,"title":{},"body":{"classes/AppResolver.html":{},"coverage.html":{}}}],["src/app.resolver.ts:5",{"_index":95,"title":{},"body":{"classes/AppResolver.html":{}}}],["src/app.resolver.ts:9",{"_index":100,"title":{},"body":{"classes/AppResolver.html":{}}}],["src/app.service.ts",{"_index":106,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guards.ts",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guards.ts:14",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guards.ts:20",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guards.ts:47",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/public.decorator",{"_index":413,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":481,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.options.ts",{"_index":317,"title":{},"body":{"injectables/GraphqlOptions.html":{},"coverage.html":{}}}],["src/graphql.options.ts:6",{"_index":319,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["src/main.ts",{"_index":482,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/hashing/bcrypt.service.ts",{"_index":266,"title":{},"body":{"injectables/BcryptService.html":{},"coverage.html":{}}}],["src/shared/hashing/bcrypt.service.ts:12",{"_index":272,"title":{},"body":{"injectables/BcryptService.html":{}}}],["src/shared/hashing/bcrypt.service.ts:7",{"_index":275,"title":{},"body":{"injectables/BcryptService.html":{}}}],["src/shared/hashing/hashing.service.ts",{"_index":325,"title":{},"body":{"injectables/HashingService.html":{},"coverage.html":{}}}],["src/shared/hashing/hashing.service.ts:5",{"_index":328,"title":{},"body":{"injectables/HashingService.html":{}}}],["src/shared/hashing/hashing.service.ts:6",{"_index":327,"title":{},"body":{"injectables/HashingService.html":{}}}],["src/telemetry/tracing.ts",{"_index":484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/create",{"_index":281,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["src/users/dto/sign",{"_index":329,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":334,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["src/users/dto/users.args.ts",{"_index":363,"title":{},"body":{"classes/UsersArgs.html":{},"coverage.html":{}}}],["src/users/dto/users.args.ts:13",{"_index":370,"title":{},"body":{"classes/UsersArgs.html":{}}}],["src/users/dto/users.args.ts:8",{"_index":373,"title":{},"body":{"classes/UsersArgs.html":{}}}],["src/users/entities/users.entity.ts",{"_index":343,"title":{},"body":{"entities/Users.html":{},"coverage.html":{}}}],["src/users/entities/users.entity.ts:13",{"_index":351,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:17",{"_index":355,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:21",{"_index":347,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:25",{"_index":354,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:29",{"_index":346,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:33",{"_index":356,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:37",{"_index":348,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:9",{"_index":350,"title":{},"body":{"entities/Users.html":{}}}],["src/users/users.module.ts",{"_index":382,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.resolver.ts",{"_index":388,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["src/users/users.resolver.ts:13",{"_index":405,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:23",{"_index":407,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:28",{"_index":403,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:37",{"_index":396,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:44",{"_index":400,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:52",{"_index":398,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:9",{"_index":393,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.service",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":446,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":444,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:45",{"_index":442,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:54",{"_index":452,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:73",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["srvrdtek",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":557,"title":{},"body":{"index.html":{}}}],["start:devcompodoc",{"_index":572,"title":{},"body":{"index.html":{}}}],["start:devtest",{"_index":568,"title":{},"body":{"index.html":{}}}],["started",{"_index":548,"title":{"index.html":{}},"body":{}}],["statements",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscription",{"_index":323,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["successful",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["summary",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["support",{"_index":580,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":581,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["take",{"_index":461,"title":{},"body":{"injectables/UsersService.html":{}}}],["test",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["test:cov",{"_index":571,"title":{},"body":{"index.html":{}}}],["tests",{"_index":570,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{}}}],["this.authservice.signin(signindto.username",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.extracttokenfromheader(request",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.findonebyid(id",{"_index":469,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.hashingservice.compare(pass",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hashingservice.hash",{"_index":464,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.usersrepository.create",{"_index":465,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":459,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":458,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.preload",{"_index":468,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.remove(user",{"_index":470,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":466,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserinput",{"_index":425,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall(usersargs",{"_index":415,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(username",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(id",{"_index":422,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.remove(id",{"_index":430,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(id",{"_index":428,"title":{},"body":{"classes/UsersResolver.html":{}}}],["throw",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["titi",{"_index":417,"title":{},"body":{"classes/UsersResolver.html":{}}}],["titi2",{"_index":419,"title":{},"body":{"classes/UsersResolver.html":{}}}],["token",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tomee8",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toto",{"_index":408,"title":{},"body":{"classes/UsersResolver.html":{}}}],["trace",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["traceexporter",{"_index":487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/GraphqlOptions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tsconfig.json",{"_index":577,"title":{},"body":{"index.html":{}}}],["type",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":359,"title":{},"body":{"entities/Users.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([users",{"_index":387,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorized",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["undefined",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unit",{"_index":569,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":101,"title":{},"body":{"classes/AppResolver.html":{}}}],["unlicensed",{"_index":592,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":561,"title":{},"body":{"index.html":{}}}],["update",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":451,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser",{"_index":391,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(id",{"_index":399,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":333,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserinput.password",{"_index":467,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["usefactory",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@get('profile",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user(@args('id",{"_index":421,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user(id",{"_index":401,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user.id",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.input",{"_index":337,"title":{},"body":{"classes/UpdateUserInput.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":282,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:16",{"_index":297,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":292,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:25",{"_index":301,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:31",{"_index":299,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:36",{"_index":290,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:41",{"_index":302,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:46",{"_index":295,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.username",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.password",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":341,"title":{"entities/Users.html":{}},"body":{"entities/Users.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users(@args",{"_index":414,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(usersargs",{"_index":404,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.resolver",{"_index":385,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":383,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/dto/sign",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["users/users.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users2",{"_index":392,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users2(@args",{"_index":420,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users2(usersargs",{"_index":406,"title":{},"body":{"classes/UsersResolver.html":{}}}],["usersargs",{"_index":362,"title":{"classes/UsersArgs.html":{}},"body":{"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":41,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":440,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersresolver",{"_index":384,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":236,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":312,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UsersArgs.html":{},"dependencies.html":{}}}],["value",{"_index":367,"title":{},"body":{"classes/UsersArgs.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":594,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":589,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":564,"title":{},"body":{"index.html":{}}}],["we're",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["weight",{"_index":287,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{}}}],["world",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppResolver } from './app.resolver';\nimport { AppService } from './app.service';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { GraphqlOptions } from './graphql.options';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { MercuriusDriver, MercuriusDriverConfig } from '@nestjs/mercurius';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        type: 'postgres',\n        host: config.get('DATABASE_HOST', 'localhost'),\n        port: config.get('DATABASE_PORT', 5432),\n        username: config.get('DATABASE_USER', 'postgres'),\n        password: config.get('DATABASE_PASSWORD', 'pass123'),\n        database: config.get('DATABASE_NAME', 'postgres'),\n        synchronize: true,\n        autoLoadEntities: true,\n      }),\n    }),\n    GraphQLModule.forRootAsync({\n      driver: MercuriusDriver,\n      useClass: GraphqlOptions,\n    }),\n    UsersModule,\n    AuthModule,\n  ],\n  providers: [AppService, AppResolver],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppResolver.html":{"url":"classes/AppResolver.html","title":"class - AppResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/app.resolver.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/app.resolver.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { AppService } from './app.service';\n\n@Resolver()\nexport class AppResolver {\n  constructor(private readonly appService: AppService) {}\n\n  @Query(() => String)\n  public async getHello() {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n  Get,\n  Request,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { SignInDto } from '../users/dto/sign-in.dto';\nimport { AuthGuard } from './auth.guards';\n\n@Controller('auth')\nexport class AuthController {\n  /**\n * @summary This is a summary of the auth\n * @tags auth\n * @description Description of the endpoint\n * @response 200 {string} OK - The request was successful\n * @response 401 {string} Not Found - Unauthorized\n * @returns Test JSDOC\n */\n  constructor (private authService: AuthService) { }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  signIn(@Body() signInDto: SignInDto) {\n    return this.authService.signIn(signInDto.username, signInDto.password);\n  }\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guards.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guards.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guards.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: FastifyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guards.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        FastifyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { FastifyRequest } from 'fastify';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from './decorators/public.decorator';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private reflector: Reflector,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      // 💡 See this condition\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: jwtConstants.secret,\n      });\n      // 💡 We're assigning the payload to the request object here\n      // so that we can access it in our route handlers\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: FastifyRequest): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { HashingService } from '../shared/hashing/hashing.service';\nimport { BcryptService } from '../shared/hashing/bcrypt.service';\nimport { jwtConstants } from './constants';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthGuard } from './auth.guards';\nimport { APP_GUARD } from '@nestjs/core';\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.register({\n      global: true,\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    AuthService,\n    {\n      provide: HashingService,\n      useClass: BcryptService,\n    },\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, hashingService: HashingService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingService\n                                                  \n                                                        \n                                                                        HashingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { HashingService } from '../shared/hashing/hashing.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { Logger } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private readonly hashingService: HashingService,\n    private jwtService: JwtService,\n  ) {}\n\n  async signIn(username: string, pass: string): Promise {\n    const user = await this.usersService.findOne(username);\n    Logger.log('user ===> ' + user);\n    const isValid = await this.hashingService.compare(pass, user?.password);\n    Logger.log('pass ===> ' + pass);\n    Logger.log('user?.password ===> ' + user?.password);\n    Logger.log('is Valid ==> ' + isValid);\n    if (!isValid) {\n      throw new UnauthorizedException();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const payload = { sub: user.id, username: user.username };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptService.html":{"url":"injectables/BcryptService.html","title":"injectable - BcryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/hashing/bcrypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/hashing/bcrypt.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/hashing/bcrypt.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { compare, genSalt, hash } from 'bcrypt';\nimport { HashingService } from './hashing.service';\n\n@Injectable()\nexport class BcryptService implements HashingService {\n  async hash(data: string | Buffer): Promise {\n    const salt = await genSalt();\n    return hash(data, salt);\n  }\n\n  compare(data: string | Buffer, encrypted: string): Promise {\n    return compare(data, encrypted);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                age\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                gender\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()@IsIn(['male', 'female'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsString()@MaxLength(60)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()@MaxLength(40)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  IsInt,\n  Min,\n  IsIn,\n} from 'class-validator';\n\n@InputType()\nexport class CreateUserInput {\n  @Field()\n  @IsString()\n  readonly name: string;\n\n  @Field()\n  @IsEmail()\n  readonly email: string;\n\n  @Field()\n  @IsString()\n  @MaxLength(40)\n  readonly username: string;\n\n  @Field()\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(60)\n  password: string;\n\n  @Field()\n  @IsInt()\n  @Min(0)\n  readonly age: number;\n\n  @Field()\n  @IsInt()\n  @Min(0)\n  readonly weight: number;\n\n  @Field()\n  @IsString()\n  @IsIn(['male', 'female'])\n  readonly gender: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlOptions.html":{"url":"injectables/GraphqlOptions.html","title":"injectable - GraphqlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGqlOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGqlOptions\n                        \n                    \n                \n            \n            \n                \ncreateGqlOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/graphql.options.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise | MercuriusDriverConfig\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GqlOptionsFactory } from '@nestjs/graphql';\nimport { Injectable } from '@nestjs/common';\nimport { MercuriusDriverConfig } from '@nestjs/mercurius';\n@Injectable()\nexport class GraphqlOptions implements GqlOptionsFactory {\n  createGqlOptions(): Promise | MercuriusDriverConfig {\n    return {\n      autoSchemaFile: './schema.gql',\n      subscription: true,\n      graphiql: true,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashingService.html":{"url":"injectables/HashingService.html","title":"injectable - HashingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/hashing/hashing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                compare\n                            \n                            \n                                    Abstract\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/hashing/hashing.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/hashing/hashing.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport abstract class HashingService {\n  abstract hash(data: string | Buffer): Promise;\n  abstract compare(data: string | Buffer, encrypted: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsString()@MaxLength(60)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sign-in.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()@MaxLength(40)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sign-in.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { IsNotEmpty, IsString, MaxLength } from 'class-validator';\n\n@InputType()\nexport class SignInDto {\n  @Field()\n  @IsString()\n  @MaxLength(40)\n  readonly username: string;\n\n  @Field()\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(60)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.input.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, PartialType } from '@nestjs/graphql';\nimport { CreateUserInput } from './create-user.input';\n\n@InputType()\nexport class UpdateUserInput extends PartialType(CreateUserInput) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Users.html":{"url":"entities/Users.html","title":"entity - Users","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/users.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column({length: 60})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\n\n@Entity()\n@ObjectType()\nexport class Users {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Field()\n  @Column()\n  name: string;\n\n  @Field()\n  @Column()\n  username: string;\n\n  @Field()\n  @Column()\n  email: string;\n\n  @Field()\n  @Column({ length: 60 })\n  password: string;\n\n  @Field()\n  @Column()\n  age: number;\n\n  @Field()\n  @Column()\n  weight: number;\n\n  @Field()\n  @Column()\n  gender: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersArgs.html":{"url":"classes/UsersArgs.html","title":"class - UsersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/users.args.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Min(1)@Max(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/users.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/users.args.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, Int } from '@nestjs/graphql';\nimport { Max, Min } from 'class-validator';\n\n@ArgsType()\nexport class UsersArgs {\n  @Field(() => Int)\n  @Min(0)\n  offset = 0;\n\n  @Field(() => Int)\n  @Min(1)\n  @Max(50)\n  limit = 25;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersService } from './users.service';\nimport { UsersResolver } from './users.resolver';\nimport { Users } from './entities/users.entity';\nimport { HashingService } from './../shared/hashing/hashing.service';\nimport { BcryptService } from './../shared/hashing/bcrypt.service';\n@Module({\n  imports: [TypeOrmModule.forFeature([Users])],\n  providers: [\n    {\n      provide: HashingService,\n      useClass: BcryptService,\n    },\n    UsersService,\n    UsersResolver,\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                removeUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                user\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                users\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                users2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserInput: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserInput\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, updateUserInput: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserInput\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                        \n                    user(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                        \n                    users(usersArgs: UsersArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersArgs\n                                            \n                                                            UsersArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        users2\n                        \n                    \n                \n            \n            \n                \n                        \n                    users2(usersArgs: UsersArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersArgs\n                                            \n                                                            UsersArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Toto\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from '@nestjs/common';\nimport { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { CreateUserInput, UpdateUserInput, UsersArgs } from './dto';\nimport { UsersService } from './users.service';\nimport { Users } from './entities/users.entity';\nimport { Public } from 'src/auth/decorators/public.decorator';\n\n@Resolver()\nexport class UsersResolver {\n  constructor (private readonly usersService: UsersService) { }\n  @Public()\n  @Query(() => [Users])\n  public async users(@Args() usersArgs: UsersArgs): Promise {\n    return this.usersService.findAll(usersArgs);\n  }\n  /**\n * @param {string} id - Titi\n   @params {string} id - Titi2\n * @returns {Users} Toto \n */\n  @Public()\n  @Query(() => [Users])\n  public async users2(@Args() usersArgs: UsersArgs): Promise {\n    return this.usersService.findAll(usersArgs);\n  }\n  @Public()\n  @Query(() => Users)\n  public async user(@Args('id') id: string): Promise {\n    const user = await this.usersService.findOneById(id);\n    if (!user) {\n      throw new NotFoundException(id);\n    }\n    return user;\n  }\n  @Public()\n  @Mutation(() => Users)\n  public async createUser(\n    @Args('createUserInput') createUserInput: CreateUserInput,\n  ): Promise {\n    return await this.usersService.create(createUserInput);\n  }\n  @Public()\n  @Mutation(() => Users)\n  public async updateUser(\n    @Args('id') id: string,\n    @Args('updateUserInput') updateUserInput: UpdateUserInput,\n  ): Promise {\n    return await this.usersService.update(id, updateUserInput);\n  }\n  @Public()\n  @Mutation(() => Users)\n  public async removeUser(@Args('id') id: string): Promise {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                findOneById\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, hashingService: HashingService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingService\n                                                  \n                                                        \n                                                                        HashingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserInput: CreateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserInput\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(usersArgs: UsersArgs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersArgs\n                                            \n                                                            UsersArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserInput: UpdateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserInput\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserInput } from './dto/create-user.input';\nimport { UpdateUserInput } from './dto/update-user.input';\nimport { UsersArgs } from './dto/users.args';\nimport { Users } from './entities/users.entity';\nimport { HashingService } from '../shared/hashing/hashing.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(Users)\n    private readonly usersRepository: Repository,\n    private readonly hashingService: HashingService,\n  ) {}\n  public async findOne(username: string): Promise {\n    return this.usersRepository.findOne({\n      where: {\n        username: username,\n      },\n    });\n  }\n  public async findAll(usersArgs: UsersArgs): Promise {\n    const { limit, offset } = usersArgs;\n    return this.usersRepository.find({\n      skip: offset,\n      take: limit,\n    });\n  }\n\n  public async findOneById(id: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: {\n        id: +id,\n      },\n    });\n\n    if (!user) {\n      throw new NotFoundException(`User #${id} not found`);\n    }\n    return user;\n  }\n\n  public async create(createUserInput: CreateUserInput): Promise {\n    createUserInput.password = await this.hashingService.hash(\n      createUserInput.password,\n    );\n\n    const user = this.usersRepository.create({ ...createUserInput });\n    return this.usersRepository.save(user);\n  }\n\n  public async update(\n    id: string,\n    updateUserInput: UpdateUserInput,\n  ): Promise {\n    updateUserInput.password = await this.hashingService.hash(\n      updateUserInput.password,\n    );\n\n    const user = await this.usersRepository.preload({\n      id: +id,\n      ...updateUserInput,\n    });\n\n    if (!user) {\n      throw new NotFoundException(`User #${id} not found`);\n    }\n    return this.usersRepository.save(user);\n  }\n\n  public async remove(id: string): Promise {\n    const user = await this.findOneById(id);\n    return this.usersRepository.remove(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.resolver.ts\n            \n            class\n            AppResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.guards.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.options.ts\n            \n            injectable\n            GraphqlOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/hashing/bcrypt.service.ts\n            \n            injectable\n            BcryptService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/hashing/hashing.service.ts\n            \n            injectable\n            HashingService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/telemetry/tracing.ts\n            \n            variable\n            oltpExporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/telemetry/tracing.ts\n            \n            variable\n            otelSDK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/telemetry/tracing.ts\n            \n            variable\n            traceExporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/users.args.ts\n            \n            class\n            UsersArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/entities/users.entity.ts\n            \n            entity\n            Users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/users.entity.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mercuriusjs/gateway : ^1.2.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.0.11\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.4\n        \n            @nestjs/mercurius : ^12.0.11\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-fastify : ^10.2.8\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            @opentelemetry/exporter-trace-otlp-proto : ^0.45.1\n        \n            @opentelemetry/instrumentation-fastify : ^0.32.4\n        \n            @opentelemetry/instrumentation-http : ^0.45.1\n        \n            @opentelemetry/instrumentation-nestjs-core : ^0.33.3\n        \n            @opentelemetry/propagator-b3 : ^1.18.1\n        \n            @opentelemetry/resources : ^1.18.1\n        \n            @opentelemetry/sdk-node : ^0.45.1\n        \n            @opentelemetry/sdk-trace-base : ^1.18.1\n        \n            @opentelemetry/semantic-conventions : ^1.18.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            graphql : ^16.8.1\n        \n            mercurius : ^13.3.0\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nPOC Backend SCDI \nInstallation\nExample :$ npm installRunning the app\nExample :# Start the containers\n$ docker-compose up\n\n# development\n$ npm run start\n\n# watch mode (hot refresh)\n$ npm run start:devTest\nExample :# unit tests\n$ npm run test\n\n# test coverage\n$ npm run test:cov\n\n# Run hot refresh\n$ npm run start:devCompodoc\nExample :# Generate documentation\n$ npx @compodoc/compodoc -p tsconfig.json -s\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            oltpExporter   (src/.../tracing.ts)\n                        \n                        \n                            otelSDK   (src/.../tracing.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            traceExporter   (src/.../tracing.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'fakeSecret_1234567890',\n}\n                    \n                \n\n\n        \n    \n\n    src/telemetry/tracing.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        oltpExporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new OTLPTraceExporter({\n  url: `http://srvrdtek2.eyc.com:7618/v1/traces`,\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        otelSDK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new NodeSDK({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: `srvrdtek-tomee8`, // update this to a more relevant name for you!\n  }),\n  spanProcessor: new SimpleSpanProcessor(traceExporter),\n  instrumentations: [\n    // Fastify instrumentation expects HTTP layer to be instrumented\n    new HttpInstrumentation(),\n    new FastifyInstrumentation(),\n    new NestInstrumentation(),\n  ],\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        traceExporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : oltpExporter\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
