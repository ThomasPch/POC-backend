var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.686,1,2.154]],["body/controllers/AppController.html",[0,2.646,1,3.381,2,2.358,3,0.467,4,0.467,5,0.402,6,3.116,7,0.535,8,1.447,9,3.889,10,1.538,11,0.038,12,0.763,13,3.775,14,1.148,15,1.07,16,0.588,17,0.849,18,2.346,19,2.682,20,0.467,21,0.023,22,2.682,23,1.699,24,1.265,25,3.116,26,0.029,27,0.029]],["title/modules/AppModule.html",[28,1.365,29,1.894]],["body/modules/AppModule.html",[3,0.315,4,0.315,5,0.272,11,0.038,16,0.691,17,0.573,18,2.311,19,1.812,20,0.315,21,0.016,26,0.022,27,0.022,28,1.921,29,3.49,30,1.272,31,1.272,32,1.593,33,1.593,34,1.272,35,2.666,36,1.593,37,2.105,38,2.105,39,2.105,40,2.855,41,2.562,42,2.282,43,1.593,44,1.593,45,2.55,46,3.033,47,2.105,48,1.593,49,2.282,50,2.55,51,2.55,52,0.855,53,2.282,54,2.55,55,3.653,56,4.269,57,2.105,58,2.105,59,3.653,60,2.105,61,1.812,62,2.55,63,2.55,64,2.55,65,2.55,66,2.55,67,2.55,68,0.515,69,4.269,70,2.55,71,2.55,72,2.55,73,2.55,74,2.55,75,2.55,76,1.272,77,2.55,78,1.593,79,2.55,80,2.55,81,2.55,82,2.55,83,2.55,84,2.031,85,2.55,86,2.55,87,2.55,88,1.812]],["title/classes/AppResolver.html",[21,0.019,49,1.894]],["body/classes/AppResolver.html",[3,0.424,4,0.424,5,0.365,7,0.486,8,1.361,9,3.752,10,1.397,11,0.037,12,0.904,14,1.043,15,0.771,16,0.553,18,2.528,19,2.437,20,0.424,21,0.021,22,2.437,23,1.544,24,1.149,25,2.831,26,0.028,27,0.028,49,2.795,52,1.149,68,0.693,89,1.544,90,2.831,91,2.77,92,2.486,93,1.711,94,3.43,95,3.43,96,1.397,97,1.043,98,1.397,99,3.43,100,3.43,101,3.43,102,3.694,103,3.694]],["title/injectables/AppService.html",[18,1.365,104,0.682]],["body/injectables/AppService.html",[3,0.491,4,0.491,5,0.423,7,0.563,8,1.494,9,3.961,11,0.037,12,0.803,14,1.208,15,1.105,16,0.491,17,0.894,18,2.212,20,0.491,21,0.024,24,1.332,26,0.03,27,0.03,104,1.105,105,1.789,106,3.281,107,3.975,108,3.975,109,3.975]],["title/controllers/AuthController.html",[0,1.686,110,1.894]],["body/controllers/AuthController.html",[0,1.531,2,1.72,3,0.34,4,0.34,5,0.293,7,0.39,8,1.173,10,1.571,11,0.038,12,0.78,14,1.173,15,0.867,16,0.596,17,0.619,20,0.34,21,0.017,24,1.293,26,0.024,27,0.024,68,0.556,93,1.374,96,1.571,97,1.173,98,1.571,110,2.41,111,2.273,112,2.754,113,4.453,114,3.858,115,3.185,116,2.754,117,2.754,118,2.754,119,3.858,120,2.754,121,3.289,122,2.754,123,2.754,124,2.754,125,2.754,126,2.754,127,2.754,128,2.754,129,3.185,130,2.222,131,2.273,132,2.754,133,2.754,134,1.531,135,2.273,136,2.754,137,3.858,138,2.754,139,2.741,140,2.754,141,3.858,142,2.754,143,2.754,144,2.754,145,2.754,146,2.273,147,2.754,148,1.72,149,2.754,150,2.754,151,2.754,152,2.754,153,2.754,154,2.754,155,2.754,156,2.754,157,2.754]],["title/guards/AuthGuard.html",[134,1.686,158,2.154]],["body/guards/AuthGuard.html",[3,0.267,4,0.267,5,0.23,7,0.306,8,0.984,11,0.038,12,0.784,14,0.984,15,0.728,16,0.599,17,0.486,20,0.267,21,0.013,24,1.3,26,0.02,27,0.02,68,0.932,84,1.8,92,1.936,93,1.615,96,1.581,97,1.18,98,1.581,104,0.728,129,3.203,134,1.8,148,2.882,159,2.162,160,1.785,161,4.309,162,3.237,163,2.162,164,3.997,165,5.02,166,2.162,167,3.237,168,4.309,169,2.162,170,2.162,171,1.457,172,3.237,173,4.309,174,2.162,175,3.881,176,3.203,177,1.351,178,1.351,179,1.785,180,1.536,181,1.536,182,1.536,183,2.162,184,1.536,185,2.566,186,2.672,187,2.162,188,2.162,189,2.162,190,2.162,191,2.162,192,2.162,193,4.309,194,2.162,195,2.022,196,1.615,197,2.162,198,3.203,199,1.202,200,2.162,201,1.536,202,1.785,203,2.162,204,2.162,205,1.785,206,2.162,207,2.162,208,2.162,209,2.162,210,2.162,211,2.162,212,2.162,213,2.162]],["title/modules/AuthModule.html",[28,1.365,40,1.686]],["body/modules/AuthModule.html",[2,2.339,3,0.326,4,0.326,5,0.281,11,0.038,16,0.696,17,0.593,20,0.326,21,0.016,26,0.023,27,0.023,28,1.958,30,1.317,31,1.317,32,1.649,33,1.649,34,1.317,35,2.718,36,2.718,40,3.087,41,2.591,42,2.339,43,1.649,44,1.649,46,2.66,58,2.179,84,1.468,88,2.66,110,2.718,130,2.869,131,2.179,134,2.082,135,2.179,177,1.649,178,1.649,179,2.179,181,1.875,201,1.875,202,2.179,214,2.179,215,2.64,216,2.179,217,2.179,218,2.64,219,2.64,220,1.525,221,1.649,222,2.082,223,2.179,224,2.64,225,3.744,226,2.64,227,2.64,228,2.64,229,2.64,230,2.64,231,3.091]],["title/injectables/AuthService.html",[104,0.682,130,1.513]],["body/injectables/AuthService.html",[3,0.301,4,0.301,5,0.26,7,0.345,8,1.075,11,0.038,12,0.714,14,0.741,15,1.137,16,0.599,17,0.795,20,0.301,21,0.015,23,1.097,24,0.817,26,0.022,27,0.022,68,0.714,76,1.764,92,2.076,93,1.764,96,1.44,97,1.075,98,1.44,104,0.795,105,1.097,115,2.919,130,1.764,148,2.599,164,4.305,171,1.591,176,2.919,177,1.522,185,2.314,195,1.522,196,1.216,198,2.012,199,2.314,220,2.124,221,1.522,232,2.012,233,2.012,234,2.275,235,2.437,236,3.536,237,4.565,238,2.437,239,2.437,240,2.437,241,2.512,242,2.437,243,2.437,244,4.161,245,2.437,246,3.536,247,2.437,248,2.437,249,2.437,250,2.437,251,2.437,252,2.437,253,2.437,254,2.437,255,2.437,256,2.437,257,2.437,258,2.437,259,2.437,260,2.437,261,2.437,262,2.437,263,2.437]],["title/injectables/BcryptService.html",[104,0.682,222,1.686]],["body/injectables/BcryptService.html",[3,0.364,4,0.364,5,0.313,7,0.416,8,1.228,11,0.038,12,0.816,14,1.228,15,1.279,16,0.57,17,0.661,20,0.364,21,0.018,24,1.353,26,0.025,27,0.025,68,0.816,92,2.301,96,1.645,97,1.228,98,1.645,104,0.908,105,1.324,171,2.234,184,2.089,185,1.635,199,1.635,220,1.645,222,2.245,264,2.427,265,3.806,266,3.806,267,3.806,268,4.436,269,4.097,270,2.941,271,3.333,272,3.806,273,2.941,274,4.037,275,2.427,276,2.941,277,4.037]],["title/classes/CreateUserInput.html",[21,0.019,278,1.513]],["body/classes/CreateUserInput.html",[3,0.302,4,0.302,5,0.26,7,0.346,10,2.126,11,0.037,12,1.055,15,1.244,16,0.438,20,0.302,21,0.022,23,2.657,26,0.022,27,0.022,52,0.819,68,1.055,76,2.08,78,2.603,89,1.1,97,1.267,278,1.768,279,4.413,280,1.737,281,1.768,282,3.441,283,3.441,284,3.441,285,3.441,286,3.248,287,3.543,288,2.444,289,2.444,290,2.444,291,2.444,292,3.543,293,2.444,294,2.444,295,2.444,296,2.018,297,2.444,298,2.018,299,2.444,300,2.444,301,3.34,302,2.517,303,3.543,304,2.925,305,4.006,306,2.018,307,4.168,308,2.018,309,2.444,310,1.527,311,2.018,312,2.018,313,2.925,314,2.444]],["title/injectables/GraphqlOptions.html",[53,1.894,104,0.682]],["body/injectables/GraphqlOptions.html",[3,0.444,4,0.444,5,0.383,7,0.509,8,1.403,11,0.038,12,0.726,14,1.093,16,0.63,17,0.808,20,0.444,21,0.022,24,1.204,26,0.028,27,0.028,52,1.204,53,2.881,60,4.205,61,2.553,84,2.565,104,1.037,105,1.618,171,2.076,184,2.553,315,2.967,316,5.375,317,3.594,318,4.613,319,3.594,320,3.594,321,3.594,322,3.594]],["title/injectables/HashingService.html",[104,0.682,220,1.235]],["body/injectables/HashingService.html",[3,0.399,4,0.399,5,0.344,7,0.457,8,1.308,11,0.037,12,0.869,14,1.308,15,1.304,16,0.399,17,0.726,20,0.399,21,0.02,26,0.026,27,0.026,68,0.869,96,1.752,97,1.308,98,1.752,104,0.967,105,1.453,171,2.321,220,1.752,265,3.55,266,3.55,267,3.55,268,4.559,269,3.992,271,3.55,272,3.55,323,2.665,324,5.638,325,3.228,326,3.228]],["title/classes/SignInDto.html",[21,0.019,121,1.894]],["body/classes/SignInDto.html",[3,0.427,4,0.427,5,0.368,7,0.49,10,1.833,11,0.037,12,0.909,15,1.191,16,0.556,20,0.427,21,0.028,23,2.251,26,0.028,27,0.028,52,1.159,68,0.909,76,2.496,78,3.124,89,1.557,121,2.811,281,2.245,296,2.855,298,2.855,301,3.124,302,3.197,304,3.714,305,4.129,306,2.855,310,2.16,311,2.855,312,2.855,327,4.129,328,2.855,329,3.458,330,3.458]],["title/classes/UpdateUserInput.html",[21,0.019,331,1.686]],["body/classes/UpdateUserInput.html",[3,0.514,4,0.514,5,0.443,11,0.037,16,0.624,20,0.514,21,0.026,26,0.031,27,0.031,52,1.392,89,1.87,278,2.073,280,2.952,302,3.588,331,2.808,332,3.43,333,4.155,334,3.43,335,3.43,336,4.155,337,4.155]],["title/entities/Users.html",[338,2.154,339,1.513]],["body/entities/Users.html",[3,0.318,4,0.318,5,0.274,7,0.364,10,2.208,11,0.037,12,1.095,15,1.259,16,0.455,20,0.318,21,0.016,26,0.023,27,0.023,52,0.863,68,1.095,76,2.141,78,2.68,97,1.305,281,1.835,282,3.542,283,3.542,284,3.542,285,3.542,286,3.659,301,3.447,338,2.613,339,1.835,340,2.125,341,2.125,342,3.518,343,5.15,344,2.574,345,2.574,346,2.574,347,2.574,348,2.574,349,2.574,350,2.574,351,3.678,352,2.574,353,2.574,354,2.574,355,3.678,356,5.421,357,1.829,358,3.678,359,2.574]],["title/classes/UsersArgs.html",[21,0.019,360,1.686]],["body/classes/UsersArgs.html",[3,0.417,4,0.417,5,0.359,7,0.478,10,1.803,11,0.038,12,0.895,16,0.547,20,0.417,21,0.027,26,0.027,27,0.027,52,1.131,68,0.895,89,1.518,281,2.209,286,3.146,301,3.087,308,2.785,310,2.107,313,2.785,360,2.462,361,2.785,362,4.079,363,4.079,364,3.655,365,3.655,366,4.427,367,3.373,368,3.373,369,3.655,370,3.373,371,3.373,372,4.427,373,4.942,374,3.373,375,3.373,376,3.373]],["title/modules/UsersModule.html",[28,1.365,41,1.513]],["body/modules/UsersModule.html",[3,0.383,4,0.383,5,0.33,11,0.038,16,0.69,17,0.696,20,0.383,21,0.019,26,0.026,27,0.026,28,2.131,30,1.544,31,1.544,32,1.933,33,1.933,34,1.544,35,2.957,36,2.957,41,2.783,42,2.611,43,1.933,44,1.933,46,2.199,47,2.555,48,1.933,88,2.199,220,1.703,221,1.933,222,2.325,223,2.555,231,2.555,234,2.659,339,1.544,377,2.555,378,2.555,379,2.555,380,3.095,381,2.555,382,2.611,383,3.095,384,2.199,385,3.095]],["title/classes/UsersResolver.html",[21,0.019,382,1.894]],["body/classes/UsersResolver.html",[3,0.21,4,0.21,5,0.181,7,0.24,8,0.816,10,1.789,11,0.038,12,0.93,14,1.335,15,1.104,16,0.543,17,0.381,20,0.21,21,0.01,22,1.205,23,0.763,24,1.472,26,0.017,27,0.017,52,0.568,68,0.93,89,0.763,91,3.22,92,2.781,93,0.846,96,1.874,97,1.399,98,1.874,102,3.128,103,2.216,171,2.35,185,0.943,195,1.059,196,0.846,199,1.853,233,1.4,234,1.977,241,2.934,278,2.191,331,2.653,339,2.451,342,3.12,360,2.855,381,1.4,382,1.677,384,1.205,386,1.4,387,3.332,388,2.684,389,3.332,390,2.684,391,1.696,392,1.696,393,3.332,394,1.696,395,1.696,396,1.696,397,1.696,398,1.696,399,1.696,400,3.332,401,1.696,402,1.696,403,1.696,404,1.696,405,1.696,406,1.4,407,1.696,408,3.789,409,1.696,410,1.696,411,1.696,412,2.684,413,1.696,414,1.696,415,1.696,416,1.696,417,1.696,418,1.696,419,1.696,420,1.696,421,1.696,422,1.696,423,1.696]],["title/injectables/UsersService.html",[104,0.682,234,1.365]],["body/injectables/UsersService.html",[3,0.198,4,0.198,5,0.17,7,0.227,8,0.779,11,0.038,12,0.909,14,1.302,15,1.156,16,0.578,17,0.36,20,0.198,21,0.01,23,1.154,24,1.435,26,0.016,27,0.016,48,1,68,0.909,76,1.6,91,3.066,92,2.751,93,1.279,96,1.832,97,1.367,98,1.832,104,0.576,105,0.72,146,2.116,148,1.601,171,2.315,185,2.231,195,1.601,196,1.279,199,2.231,220,1.832,221,1,234,1.154,241,3.195,278,2.136,331,2.598,334,2.116,335,2.116,339,0.799,342,3.513,357,1.137,360,2.381,362,2.116,363,2.116,384,1.137,406,1.321,424,1.321,425,2.564,426,2.564,427,2.564,428,2.564,429,2.647,430,1.6,431,3.667,432,1.6,433,2.564,434,2.564,435,1.6,436,2.564,437,1.6,438,2.564,439,1.6,440,2.564,441,1.6,442,2.564,443,1.6,444,1.6,445,1.6,446,1.6,447,1.6,448,1.6,449,1.6,450,1.6,451,2.564,452,1.6,453,1.6,454,1.6,455,2.564,456,2.564,457,2.564,458,1.6,459,2.564,460,2.564,461,1.6,462,1.6,463,1.6]],["title/coverage.html",[464,2.929]],["body/coverage.html",[0,2.009,1,1.784,5,0.268,6,2.073,11,0.037,18,1.13,21,0.032,26,0.022,27,0.022,34,1.253,49,1.568,53,1.568,68,0.507,90,2.073,91,1.396,104,1.148,106,2.073,110,1.568,111,2.073,121,1.568,130,1.253,134,1.396,158,1.784,160,2.073,178,1.568,182,1.784,196,1.253,220,1.023,222,1.396,232,2.073,234,1.13,264,2.073,278,1.253,279,2.073,280,2.567,315,2.073,323,2.073,327,2.073,328,2.073,331,1.396,332,2.073,338,1.784,339,1.803,341,2.982,360,1.396,361,2.073,369,4.99,382,1.568,386,2.073,424,2.073,464,1.784,465,2.511,466,2.511,467,2.511,468,4.232,469,5.263,470,2.511,471,2.073,472,5.107,473,5.485,474,2.982,475,2.073,476,2.511,477,3.494,478,2.073,479,2.073,480,2.073,481,4.232,482,2.511,483,2.511,484,2.511]],["title/dependencies.html",[31,1.817,485,2.096]],["body/dependencies.html",[11,0.038,17,0.659,21,0.025,26,0.025,27,0.025,31,1.462,48,1.83,52,0.982,57,2.419,61,2.082,177,1.83,180,2.862,181,2.082,275,2.419,310,1.83,357,2.082,486,2.93,487,2.93,488,4.602,489,2.93,490,4.028,491,2.93,492,2.93,493,2.93,494,2.93,495,4.028,496,2.93,497,2.93,498,2.93,499,2.93,500,2.93,501,2.93,502,4.028,503,2.93,504,2.93,505,4.602,506,4.602,507,2.93,508,2.419,509,2.93,510,2.93,511,2.93,512,2.93,513,2.93,514,4.955,515,2.93,516,4.028,517,2.93,518,2.93,519,2.93,520,2.93,521,2.93,522,2.93,523,2.93,524,2.93,525,2.93,526,2.93,527,2.93,528,2.93,529,2.93,530,2.93,531,2.93,532,2.93,533,2.93,534,2.93,535,2.93,536,2.93]],["title/miscellaneous/functions.html",[537,1.586,538,3.007]],["body/miscellaneous/functions.html",[7,0.647,11,0.033,26,0.033,27,0.033,34,2.827,475,3.772,537,2.854,538,3.772,539,4.569]],["title/index.html",[7,0.36,540,2.539,541,2.539]],["body/index.html",[11,0.038,26,0.028,27,0.028,139,2.565,464,2.565,542,3.61,543,3.61,544,3.61,545,3.61,546,5.105,547,5.695,548,3.61,549,3.61,550,4.626,551,3.61,552,3.61,553,3.61,554,3.61,555,3.61,556,5.695,557,3.61,558,3.61,559,4.626,560,4.626,561,3.61,562,3.61,563,3.61,564,4.626,565,3.61,566,3.61]],["title/modules.html",[30,2.057]],["body/modules.html",[11,0.032,26,0.032,27,0.032,29,2.733,30,2.183,40,2.433,41,2.183,567,5.564,568,5.564,569,5.564,570,5.564]],["title/overview.html",[571,3.403]],["body/overview.html",[2,2.032,11,0.036,18,2.185,26,0.027,27,0.027,28,1.464,29,3.583,30,1.624,31,1.624,32,2.032,33,2.032,34,1.624,35,2.032,36,2.032,37,2.686,38,2.686,39,2.686,40,3.19,41,2.819,42,2.7,43,2.032,44,2.032,89,1.464,105,1.464,130,2.819,158,2.312,214,2.686,216,2.686,217,2.686,234,2.543,340,2.686,377,2.686,378,2.686,379,2.686,571,2.686,572,3.254,573,3.254,574,4.323,575,3.254,576,3.254]],["title/properties.html",[281,1.817,485,2.096]],["body/properties.html",[11,0.037,26,0.033,27,0.033,139,3.193,281,2.243,577,4.494,578,4.494,579,4.494,580,4.494,581,4.494]],["title/miscellaneous/variables.html",[537,1.586,582,3.007]],["body/miscellaneous/variables.html",[7,0.433,11,0.038,15,0.688,26,0.026,27,0.026,68,0.838,84,1.702,91,2.307,97,0.931,178,2.592,180,2.175,182,2.948,186,2.526,196,2.775,201,2.175,205,2.526,364,4.489,365,4.489,429,2.526,471,2.526,474,2.526,477,2.526,478,3.885,479,3.425,480,3.425,508,2.526,537,1.912,582,2.526,583,4.149,584,3.061,585,4.707,586,3.061,587,3.061,588,3.061,589,3.061,590,3.061,591,3.061,592,4.149,593,3.061,594,3.061,595,3.061,596,3.061,597,3.061,598,3.061,599,3.061,600,3.061,601,3.061,602,3.061,603,3.061,604,3.061,605,3.061,606,3.061,607,3.061]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":369,"title":{},"body":{"classes/UsersArgs.html":{},"coverage.html":{}}}],["0.0.1",{"_index":578,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["0.32.4",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["0.33.3",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["0.45.1",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":574,"title":{},"body":{"overview.html":{}}}],["1.18.1",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["10.2.8",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["12.0.11",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["13.3.0",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["16.8.1",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":573,"title":{},"body":{"overview.html":{}}}],["2.0.4",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["25",{"_index":366,"title":{},"body":{"classes/UsersArgs.html":{}}}],["3",{"_index":572,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["5.1.1",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["6",{"_index":575,"title":{},"body":{"overview.html":{}}}],["60",{"_index":351,"title":{},"body":{"entities/Users.html":{}}}],["60s",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["7",{"_index":576,"title":{},"body":{"overview.html":{}}}],["7.1.16",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":324,"title":{},"body":{"injectables/HashingService.html":{}}}],["access",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["access_token",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["age",{"_index":282,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{}}}],["app",{"_index":549,"title":{},"body":{"index.html":{}}}],["app.resolver",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{}}}],["app_guard",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appresolver",{"_index":49,"title":{"classes/AppResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"coverage.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":407,"title":{},"body":{"classes/UsersResolver.html":{}}}],["args('createuserinput",{"_index":417,"title":{},"body":{"classes/UsersResolver.html":{}}}],["args('id",{"_index":419,"title":{},"body":{"classes/UsersResolver.html":{}}}],["args('updateuserinput",{"_index":420,"title":{},"body":{"classes/UsersResolver.html":{}}}],["argstype",{"_index":372,"title":{},"body":{"classes/UsersArgs.html":{}}}],["assigning",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":92,"title":{},"body":{"classes/AppResolver.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guards",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.service",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":110,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":134,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":581,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":130,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["autoschemafile",{"_index":319,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["await",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["b3",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["backend",{"_index":543,"title":{},"body":{"index.html":{}}}],["base",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["bcrypt",{"_index":275,"title":{},"body":{"injectables/BcryptService.html":{},"dependencies.html":{}}}],["bcryptservice",{"_index":222,"title":{"injectables/BcryptService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/BcryptService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["bearer",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":570,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":567,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":268,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["canactivate",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catch",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{}}}],["class",{"_index":21,"title":{"classes/AppResolver.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":89,"title":{},"body":{"classes/AppResolver.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":377,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":379,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":378,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":356,"title":{},"body":{"entities/Users.html":{}}}],["compare",{"_index":265,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["compare(data",{"_index":267,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["compose",{"_index":553,"title":{},"body":{"index.html":{}}}],["condition",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{}}}],["config",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_host",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_name",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_password",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_port",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('database_user",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constants",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(appservice",{"_index":94,"title":{},"body":{"classes/AppResolver.html":{}}}],["constructor(jwtservice",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"classes/UsersResolver.html":{}}}],["constructor(usersrepository",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersResolver.html":{}}}],["containers",{"_index":551,"title":{},"body":{"index.html":{}}}],["context",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.getclass",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.gethandler",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["conventions",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":464,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":334,"title":{},"body":{"classes/UpdateUserInput.html":{},"injectables/UsersService.html":{}}}],["create(createuserinput",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["creategqloptions",{"_index":316,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["createuser",{"_index":387,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(createuserinput",{"_index":392,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":278,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserinput.password",{"_index":456,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":271,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["database",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"controllers/AuthController.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{}}}],["decorators/public.decorator",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["default",{"_index":364,"title":{},"body":{"classes/UsersArgs.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":555,"title":{},"body":{"index.html":{}}}],["disable",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["docker",{"_index":552,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["driver",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["dto",{"_index":409,"title":{},"body":{"classes/UsersResolver.html":{}}}],["dto/create",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/update",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/users.args",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["email",{"_index":283,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{}}}],["encrypted",{"_index":269,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["endpoint",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["entities",{"_index":340,"title":{},"body":{"entities/Users.html":{},"overview.html":{}}}],["entities/users.entity",{"_index":384,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":338,"title":{"entities/Users.html":{}},"body":{"entities/Users.html":{},"coverage.html":{}}}],["eslint",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["eslint/no",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":546,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["expects",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":336,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["extracttokenfromheader",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["fakesecret_1234567890",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fastify",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fastifyinstrumentation",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fastifyrequest",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{}}}],["female",{"_index":292,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field",{"_index":301,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{}}}],["field()@column",{"_index":343,"title":{},"body":{"entities/Users.html":{}}}],["field()@column({length",{"_index":350,"title":{},"body":{"entities/Users.html":{}}}],["field()@isemail",{"_index":289,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@isint()@min(0",{"_index":287,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@isnotempty()@isstring()@maxlength(60",{"_index":296,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["field()@isstring",{"_index":294,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@isstring()@isin(['male",{"_index":291,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@isstring()@maxlength(40",{"_index":298,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["field(undefined)@min(0",{"_index":370,"title":{},"body":{"classes/UsersArgs.html":{}}}],["field(undefined)@min(1)@max(50",{"_index":367,"title":{},"body":{"classes/UsersArgs.html":{}}}],["field(undefined)@primarygeneratedcolumn",{"_index":347,"title":{},"body":{"entities/Users.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(usersargs",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(username",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":440,"title":{},"body":{"injectables/UsersService.html":{}}}],["found",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["function",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":538,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":284,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{}}}],["gensalt",{"_index":274,"title":{},"body":{"injectables/BcryptService.html":{}}}],["get('profile",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@request",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":540,"title":{"index.html":{}},"body":{}}],["global",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["gqloptionsfactory",{"_index":318,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["graphiql",{"_index":322,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["graphql",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["graphql.options",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqloptions",{"_index":53,"title":{"injectables/GraphqlOptions.html":{}},"body":{"modules/AppModule.html":{},"injectables/GraphqlOptions.html":{},"coverage.html":{}}}],["guard",{"_index":158,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handlers",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hash",{"_index":266,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["hash(data",{"_index":272,"title":{},"body":{"injectables/BcryptService.html":{},"injectables/HashingService.html":{}}}],["hashing.service",{"_index":276,"title":{},"body":{"injectables/BcryptService.html":{}}}],["hashingservice",{"_index":220,"title":{"injectables/HashingService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["hello",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{}}}],["host",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["hot",{"_index":559,"title":{},"body":{"index.html":{}}}],["http",{"_index":508,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["http://srvrdtek2.eyc.com:7618/v1/traces",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@post('login",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpinstrumentation",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":342,"title":{},"body":{"entities/Users.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["in.dto",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["in.dto.ts",{"_index":328,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:15",{"_index":329,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:9",{"_index":330,"title":{},"body":{"classes/SignInDto.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":104,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":105,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":446,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(users",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["inputtype",{"_index":302,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{}}}],["installation",{"_index":545,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":548,"title":{},"body":{"index.html":{}}}],["instrumentation",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instrumentations",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instrumented",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["int",{"_index":373,"title":{},"body":{"classes/UsersArgs.html":{}}}],["is_public_key",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":303,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isin",{"_index":309,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isin(['male",{"_index":314,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isint",{"_index":307,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["isnotempty",{"_index":304,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["ispublic",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":305,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["isvalid",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtconstants",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["layer",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":359,"title":{},"body":{"entities/Users.html":{}}}],["license",{"_index":579,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":362,"title":{},"body":{"classes/UsersArgs.html":{},"injectables/UsersService.html":{}}}],["line",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["localhost",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log('is",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log('pass",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log('user",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log('user?.password",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":374,"title":{},"body":{"classes/UsersArgs.html":{}}}],["max(50",{"_index":376,"title":{},"body":{"classes/UsersArgs.html":{}}}],["maxlength",{"_index":306,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["maxlength(40",{"_index":311,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["maxlength(60",{"_index":312,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{}}}],["mercurius",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["mercuriusdriver",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["mercuriusdriverconfig",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphqlOptions.html":{}}}],["mercuriusjs/gateway",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["metadata",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":308,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UsersArgs.html":{}}}],["min(0",{"_index":313,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UsersArgs.html":{}}}],["min(1",{"_index":375,"title":{},"body":{"classes/UsersArgs.html":{}}}],["miscellaneous",{"_index":537,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":558,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mutation",{"_index":408,"title":{},"body":{"classes/UsersResolver.html":{}}}],["name",{"_index":97,"title":{},"body":{"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/HashingService.html":{},"entities/Users.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nestinstrumentation",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjs",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mercurius",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/GraphqlOptions.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["node",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["nodesdk",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":406,"title":{},"body":{"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["notfoundexception(`user",{"_index":455,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception(id",{"_index":416,"title":{},"body":{"classes/UsersResolver.html":{}}}],["npm",{"_index":547,"title":{},"body":{"index.html":{}}}],["number",{"_index":286,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{}}}],["object",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["objecttype",{"_index":358,"title":{},"body":{"entities/Users.html":{}}}],["offset",{"_index":363,"title":{},"body":{"classes/UsersArgs.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["oltpexporter",{"_index":478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetry/exporter",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/instrumentation",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/propagator",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/resources",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/sdk",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["opentelemetry/semantic",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["optional",{"_index":98,"title":{},"body":{"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["otelsdk",{"_index":479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["otlp",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["otlptraceexporter",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":571,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":485,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":96,"title":{},"body":{"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":333,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["partialtype(createuserinput",{"_index":337,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["pass",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["pass123",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["password",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{}}}],["payload",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["pg",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["poc",{"_index":542,"title":{},"body":{"index.html":{}}}],["port",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["primarygeneratedcolumn",{"_index":355,"title":{},"body":{"entities/Users.html":{}}}],["private",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":281,"title":{"properties.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"properties.html":{}}}],["proto",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["provide",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":91,"title":{},"body":{"classes/AppResolver.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@mutation(undefined",{"_index":393,"title":{},"body":{"classes/UsersResolver.html":{}}}],["public()@query(undefined",{"_index":400,"title":{},"body":{"classes/UsersResolver.html":{}}}],["query",{"_index":102,"title":{},"body":{"classes/AppResolver.html":{},"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":99,"title":{},"body":{"classes/AppResolver.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{}}}],["refresh",{"_index":560,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove(id",{"_index":442,"title":{},"body":{"injectables/UsersService.html":{}}}],["removeuser",{"_index":388,"title":{},"body":{"classes/UsersResolver.html":{}}}],["removeuser(@args('id",{"_index":422,"title":{},"body":{"classes/UsersResolver.html":{}}}],["removeuser(id",{"_index":395,"title":{},"body":{"classes/UsersResolver.html":{}}}],["repository",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["req",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":103,"title":{},"body":{"classes/AppResolver.html":{},"classes/UsersResolver.html":{}}}],["resource",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["route",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{}}}],["run",{"_index":556,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":277,"title":{},"body":{"injectables/BcryptService.html":{}}}],["scdi",{"_index":544,"title":{},"body":{"index.html":{}}}],["schema.gql",{"_index":320,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["secret",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{}}}],["semanticresourceattributes.service_name",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/hashing/bcrypt.service",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["shared/hashing/hashing.service",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["signin",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(signindto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(username",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["signindto",{"_index":121,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signindto.password",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplespanprocessor(traceexporter",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":453,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/GraphqlOptions.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"classes/UpdateUserInput.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["spanprocessor",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tracing.ts",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.resolver.ts",{"_index":90,"title":{},"body":{"classes/AppResolver.html":{},"coverage.html":{}}}],["src/app.resolver.ts:5",{"_index":95,"title":{},"body":{"classes/AppResolver.html":{}}}],["src/app.resolver.ts:9",{"_index":100,"title":{},"body":{"classes/AppResolver.html":{}}}],["src/app.service.ts",{"_index":106,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guards.ts",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guards.ts:14",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guards.ts:20",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guards.ts:47",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/public.decorator",{"_index":410,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/graphql.options.ts",{"_index":315,"title":{},"body":{"injectables/GraphqlOptions.html":{},"coverage.html":{}}}],["src/graphql.options.ts:6",{"_index":317,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["src/main.ts",{"_index":475,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/hashing/bcrypt.service.ts",{"_index":264,"title":{},"body":{"injectables/BcryptService.html":{},"coverage.html":{}}}],["src/shared/hashing/bcrypt.service.ts:12",{"_index":270,"title":{},"body":{"injectables/BcryptService.html":{}}}],["src/shared/hashing/bcrypt.service.ts:7",{"_index":273,"title":{},"body":{"injectables/BcryptService.html":{}}}],["src/shared/hashing/hashing.service.ts",{"_index":323,"title":{},"body":{"injectables/HashingService.html":{},"coverage.html":{}}}],["src/shared/hashing/hashing.service.ts:5",{"_index":326,"title":{},"body":{"injectables/HashingService.html":{}}}],["src/shared/hashing/hashing.service.ts:6",{"_index":325,"title":{},"body":{"injectables/HashingService.html":{}}}],["src/telemetry/tracing.ts",{"_index":477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/create",{"_index":279,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["src/users/dto/sign",{"_index":327,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":332,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["src/users/dto/users.args.ts",{"_index":361,"title":{},"body":{"classes/UsersArgs.html":{},"coverage.html":{}}}],["src/users/dto/users.args.ts:13",{"_index":368,"title":{},"body":{"classes/UsersArgs.html":{}}}],["src/users/dto/users.args.ts:8",{"_index":371,"title":{},"body":{"classes/UsersArgs.html":{}}}],["src/users/entities/users.entity.ts",{"_index":341,"title":{},"body":{"entities/Users.html":{},"coverage.html":{}}}],["src/users/entities/users.entity.ts:13",{"_index":349,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:17",{"_index":353,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:21",{"_index":345,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:25",{"_index":352,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:29",{"_index":344,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:33",{"_index":354,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:37",{"_index":346,"title":{},"body":{"entities/Users.html":{}}}],["src/users/entities/users.entity.ts:9",{"_index":348,"title":{},"body":{"entities/Users.html":{}}}],["src/users/users.module.ts",{"_index":380,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.resolver.ts",{"_index":386,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["src/users/users.resolver.ts:13",{"_index":403,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:18",{"_index":405,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:23",{"_index":401,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:32",{"_index":394,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:39",{"_index":398,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:47",{"_index":396,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.resolver.ts:9",{"_index":391,"title":{},"body":{"classes/UsersResolver.html":{}}}],["src/users/users.service",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":441,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:45",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:54",{"_index":445,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:73",{"_index":443,"title":{},"body":{"injectables/UsersService.html":{}}}],["srvrdtek",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":550,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":566,"title":{},"body":{"index.html":{}}}],["start:devtest",{"_index":561,"title":{},"body":{"index.html":{}}}],["started",{"_index":541,"title":{"index.html":{}},"body":{}}],["statements",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscription",{"_index":321,"title":{},"body":{"injectables/GraphqlOptions.html":{}}}],["successful",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["summary",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["support",{"_index":568,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":569,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["take",{"_index":454,"title":{},"body":{"injectables/UsersService.html":{}}}],["test",{"_index":564,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":565,"title":{},"body":{"index.html":{}}}],["tests",{"_index":563,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"classes/AppResolver.html":{}}}],["this.authservice.signin(signindto.username",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.extracttokenfromheader(request",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.findonebyid(id",{"_index":462,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.hashingservice.compare(pass",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hashingservice.hash",{"_index":457,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.usersrepository.create",{"_index":458,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":452,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":451,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.preload",{"_index":461,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.remove(user",{"_index":463,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(user",{"_index":459,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserinput",{"_index":418,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall(usersargs",{"_index":412,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(username",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(id",{"_index":415,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.remove(id",{"_index":423,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(id",{"_index":421,"title":{},"body":{"classes/UsersResolver.html":{}}}],["throw",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["token",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tomee8",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trace",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["traceexporter",{"_index":480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/GraphqlOptions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["type",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BcryptService.html":{},"classes/CreateUserInput.html":{},"injectables/HashingService.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":357,"title":{},"body":{"entities/Users.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([users",{"_index":385,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorized",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["undefined",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unit",{"_index":562,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":101,"title":{},"body":{"classes/AppResolver.html":{}}}],["unlicensed",{"_index":580,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["up",{"_index":554,"title":{},"body":{"index.html":{}}}],["update",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":444,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser",{"_index":389,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(id",{"_index":397,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":331,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserinput.password",{"_index":460,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["usefactory",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@get('profile",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user(@args('id",{"_index":414,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user(id",{"_index":399,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user.id",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.input",{"_index":335,"title":{},"body":{"classes/UpdateUserInput.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":280,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:16",{"_index":295,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":290,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:25",{"_index":299,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:31",{"_index":297,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:36",{"_index":288,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:41",{"_index":300,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:46",{"_index":293,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.username",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.password",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"entities/Users.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":339,"title":{"entities/Users.html":{}},"body":{"entities/Users.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users(@args",{"_index":411,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(usersargs",{"_index":402,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.resolver",{"_index":383,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":381,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/dto/sign",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["users/users.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users2",{"_index":390,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users2(@args",{"_index":413,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users2(usersargs",{"_index":404,"title":{},"body":{"classes/UsersResolver.html":{}}}],["usersargs",{"_index":360,"title":{"classes/UsersArgs.html":{}},"body":{"classes/UsersArgs.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":41,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersresolver",{"_index":382,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":234,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":310,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/SignInDto.html":{},"classes/UsersArgs.html":{},"dependencies.html":{}}}],["value",{"_index":365,"title":{},"body":{"classes/UsersArgs.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":582,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":577,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":557,"title":{},"body":{"index.html":{}}}],["we're",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["weight",{"_index":285,"title":{},"body":{"classes/CreateUserInput.html":{},"entities/Users.html":{}}}],["world",{"_index":109,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppResolver } from './app.resolver';\nimport { AppService } from './app.service';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { GraphqlOptions } from './graphql.options';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { MercuriusDriver, MercuriusDriverConfig } from '@nestjs/mercurius';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        type: 'postgres',\n        host: config.get('DATABASE_HOST', 'localhost'),\n        port: config.get('DATABASE_PORT', 5432),\n        username: config.get('DATABASE_USER', 'postgres'),\n        password: config.get('DATABASE_PASSWORD', 'pass123'),\n        database: config.get('DATABASE_NAME', 'postgres'),\n        synchronize: true,\n        autoLoadEntities: true,\n      }),\n    }),\n    GraphQLModule.forRootAsync({\n      driver: MercuriusDriver,\n      useClass: GraphqlOptions,\n    }),\n    UsersModule,\n    AuthModule,\n  ],\n  providers: [AppService, AppResolver],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppResolver.html":{"url":"classes/AppResolver.html","title":"class - AppResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/app.resolver.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/app.resolver.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { AppService } from './app.service';\n\n@Resolver()\nexport class AppResolver {\n  constructor(private readonly appService: AppService) {}\n\n  @Query(() => String)\n  public async getHello() {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n  Get,\n  Request,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { SignInDto } from '../users/dto/sign-in.dto';\nimport { AuthGuard } from './auth.guards';\n\n@Controller('auth')\nexport class AuthController {\n  /**\n * @summary This is a summary of the auth\n * @tags auth\n * @description Description of the endpoint\n * @response 200 {string} OK - The request was successful\n * @response 401 {string} Not Found - Unauthorized\n */\n  constructor (private authService: AuthService) { }\n\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  signIn(@Body() signInDto: SignInDto) {\n    return this.authService.signIn(signInDto.username, signInDto.password);\n  }\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guards.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guards.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guards.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: FastifyRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guards.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        FastifyRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { FastifyRequest } from 'fastify';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from './decorators/public.decorator';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private reflector: Reflector,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      // 💡 See this condition\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: jwtConstants.secret,\n      });\n      // 💡 We're assigning the payload to the request object here\n      // so that we can access it in our route handlers\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: FastifyRequest): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { HashingService } from '../shared/hashing/hashing.service';\nimport { BcryptService } from '../shared/hashing/bcrypt.service';\nimport { jwtConstants } from './constants';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthGuard } from './auth.guards';\nimport { APP_GUARD } from '@nestjs/core';\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.register({\n      global: true,\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    AuthService,\n    {\n      provide: HashingService,\n      useClass: BcryptService,\n    },\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, hashingService: HashingService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingService\n                                                  \n                                                        \n                                                                        HashingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { HashingService } from '../shared/hashing/hashing.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { Logger } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private readonly hashingService: HashingService,\n    private jwtService: JwtService,\n  ) {}\n\n  async signIn(username: string, pass: string): Promise {\n    const user = await this.usersService.findOne(username);\n    Logger.log('user ===> ' + user);\n    const isValid = await this.hashingService.compare(pass, user?.password);\n    Logger.log('pass ===> ' + pass);\n    Logger.log('user?.password ===> ' + user?.password);\n    Logger.log('is Valid ==> ' + isValid);\n    if (!isValid) {\n      throw new UnauthorizedException();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const payload = { sub: user.id, username: user.username };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptService.html":{"url":"injectables/BcryptService.html","title":"injectable - BcryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/hashing/bcrypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/hashing/bcrypt.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/hashing/bcrypt.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { compare, genSalt, hash } from 'bcrypt';\nimport { HashingService } from './hashing.service';\n\n@Injectable()\nexport class BcryptService implements HashingService {\n  async hash(data: string | Buffer): Promise {\n    const salt = await genSalt();\n    return hash(data, salt);\n  }\n\n  compare(data: string | Buffer, encrypted: string): Promise {\n    return compare(data, encrypted);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                age\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                gender\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()@IsIn(['male', 'female'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsString()@MaxLength(60)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()@MaxLength(40)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsInt()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.input.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  IsInt,\n  Min,\n  IsIn,\n} from 'class-validator';\n\n@InputType()\nexport class CreateUserInput {\n  @Field()\n  @IsString()\n  readonly name: string;\n\n  @Field()\n  @IsEmail()\n  readonly email: string;\n\n  @Field()\n  @IsString()\n  @MaxLength(40)\n  readonly username: string;\n\n  @Field()\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(60)\n  password: string;\n\n  @Field()\n  @IsInt()\n  @Min(0)\n  readonly age: number;\n\n  @Field()\n  @IsInt()\n  @Min(0)\n  readonly weight: number;\n\n  @Field()\n  @IsString()\n  @IsIn(['male', 'female'])\n  readonly gender: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlOptions.html":{"url":"injectables/GraphqlOptions.html","title":"injectable - GraphqlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql.options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGqlOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGqlOptions\n                        \n                    \n                \n            \n            \n                \ncreateGqlOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/graphql.options.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise | MercuriusDriverConfig\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GqlOptionsFactory } from '@nestjs/graphql';\nimport { Injectable } from '@nestjs/common';\nimport { MercuriusDriverConfig } from '@nestjs/mercurius';\n@Injectable()\nexport class GraphqlOptions implements GqlOptionsFactory {\n  createGqlOptions(): Promise | MercuriusDriverConfig {\n    return {\n      autoSchemaFile: './schema.gql',\n      subscription: true,\n      graphiql: true,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashingService.html":{"url":"injectables/HashingService.html","title":"injectable - HashingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/hashing/hashing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                compare\n                            \n                            \n                                    Abstract\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/hashing/hashing.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/hashing/hashing.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport abstract class HashingService {\n  abstract hash(data: string | Buffer): Promise;\n  abstract compare(data: string | Buffer, encrypted: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsString()@MaxLength(60)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sign-in.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsString()@MaxLength(40)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/sign-in.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { IsNotEmpty, IsString, MaxLength } from 'class-validator';\n\n@InputType()\nexport class SignInDto {\n  @Field()\n  @IsString()\n  @MaxLength(40)\n  readonly username: string;\n\n  @Field()\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(60)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.input.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InputType, PartialType } from '@nestjs/graphql';\nimport { CreateUserInput } from './create-user.input';\n\n@InputType()\nexport class UpdateUserInput extends PartialType(CreateUserInput) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Users.html":{"url":"entities/Users.html","title":"entity - Users","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/users.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column({length: 60})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/users.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\n\n@Entity()\n@ObjectType()\nexport class Users {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Field()\n  @Column()\n  name: string;\n\n  @Field()\n  @Column()\n  username: string;\n\n  @Field()\n  @Column()\n  email: string;\n\n  @Field()\n  @Column({ length: 60 })\n  password: string;\n\n  @Field()\n  @Column()\n  age: number;\n\n  @Field()\n  @Column()\n  weight: number;\n\n  @Field()\n  @Column()\n  gender: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersArgs.html":{"url":"classes/UsersArgs.html","title":"class - UsersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/users.args.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Min(1)@Max(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/users.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/users.args.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, Int } from '@nestjs/graphql';\nimport { Max, Min } from 'class-validator';\n\n@ArgsType()\nexport class UsersArgs {\n  @Field(() => Int)\n  @Min(0)\n  offset = 0;\n\n  @Field(() => Int)\n  @Min(1)\n  @Max(50)\n  limit = 25;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersService } from './users.service';\nimport { UsersResolver } from './users.resolver';\nimport { Users } from './entities/users.entity';\nimport { HashingService } from './../shared/hashing/hashing.service';\nimport { BcryptService } from './../shared/hashing/bcrypt.service';\n@Module({\n  imports: [TypeOrmModule.forFeature([Users])],\n  providers: [\n    {\n      provide: HashingService,\n      useClass: BcryptService,\n    },\n    UsersService,\n    UsersResolver,\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                removeUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                user\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                users\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                users2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserInput: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserInput\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, updateUserInput: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserInput\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                        \n                    user(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                        \n                    users(usersArgs: UsersArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersArgs\n                                            \n                                                            UsersArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        users2\n                        \n                    \n                \n            \n            \n                \n                        \n                    users2(usersArgs: UsersArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.resolver.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersArgs\n                                            \n                                                            UsersArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from '@nestjs/common';\nimport { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { CreateUserInput, UpdateUserInput, UsersArgs } from './dto';\nimport { UsersService } from './users.service';\nimport { Users } from './entities/users.entity';\nimport { Public } from 'src/auth/decorators/public.decorator';\n\n@Resolver()\nexport class UsersResolver {\n  constructor(private readonly usersService: UsersService) {}\n  @Public()\n  @Query(() => [Users])\n  public async users(@Args() usersArgs: UsersArgs): Promise {\n    return this.usersService.findAll(usersArgs);\n  }\n  @Public()\n  @Query(() => [Users])\n  public async users2(@Args() usersArgs: UsersArgs): Promise {\n    return this.usersService.findAll(usersArgs);\n  }\n  @Public()\n  @Query(() => Users)\n  public async user(@Args('id') id: string): Promise {\n    const user = await this.usersService.findOneById(id);\n    if (!user) {\n      throw new NotFoundException(id);\n    }\n    return user;\n  }\n  @Public()\n  @Mutation(() => Users)\n  public async createUser(\n    @Args('createUserInput') createUserInput: CreateUserInput,\n  ): Promise {\n    return await this.usersService.create(createUserInput);\n  }\n  @Public()\n  @Mutation(() => Users)\n  public async updateUser(\n    @Args('id') id: string,\n    @Args('updateUserInput') updateUserInput: UpdateUserInput,\n  ): Promise {\n    return await this.usersService.update(id, updateUserInput);\n  }\n  @Public()\n  @Mutation(() => Users)\n  public async removeUser(@Args('id') id: string): Promise {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                findOneById\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository, hashingService: HashingService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hashingService\n                                                  \n                                                        \n                                                                        HashingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserInput: CreateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserInput\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(usersArgs: UsersArgs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                usersArgs\n                                            \n                                                            UsersArgs\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserInput: UpdateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserInput\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateUserInput } from './dto/create-user.input';\nimport { UpdateUserInput } from './dto/update-user.input';\nimport { UsersArgs } from './dto/users.args';\nimport { Users } from './entities/users.entity';\nimport { HashingService } from '../shared/hashing/hashing.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(Users)\n    private readonly usersRepository: Repository,\n    private readonly hashingService: HashingService,\n  ) {}\n  public async findOne(username: string): Promise {\n    return this.usersRepository.findOne({\n      where: {\n        username: username,\n      },\n    });\n  }\n  public async findAll(usersArgs: UsersArgs): Promise {\n    const { limit, offset } = usersArgs;\n    return this.usersRepository.find({\n      skip: offset,\n      take: limit,\n    });\n  }\n\n  public async findOneById(id: string): Promise {\n    const user = await this.usersRepository.findOne({\n      where: {\n        id: +id,\n      },\n    });\n\n    if (!user) {\n      throw new NotFoundException(`User #${id} not found`);\n    }\n    return user;\n  }\n\n  public async create(createUserInput: CreateUserInput): Promise {\n    createUserInput.password = await this.hashingService.hash(\n      createUserInput.password,\n    );\n\n    const user = this.usersRepository.create({ ...createUserInput });\n    return this.usersRepository.save(user);\n  }\n\n  public async update(\n    id: string,\n    updateUserInput: UpdateUserInput,\n  ): Promise {\n    updateUserInput.password = await this.hashingService.hash(\n      updateUserInput.password,\n    );\n\n    const user = await this.usersRepository.preload({\n      id: +id,\n      ...updateUserInput,\n    });\n\n    if (!user) {\n      throw new NotFoundException(`User #${id} not found`);\n    }\n    return this.usersRepository.save(user);\n  }\n\n  public async remove(id: string): Promise {\n    const user = await this.findOneById(id);\n    return this.usersRepository.remove(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.resolver.ts\n            \n            class\n            AppResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.guards.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/graphql.options.ts\n            \n            injectable\n            GraphqlOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/hashing/bcrypt.service.ts\n            \n            injectable\n            BcryptService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/hashing/hashing.service.ts\n            \n            injectable\n            HashingService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/telemetry/tracing.ts\n            \n            variable\n            oltpExporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/telemetry/tracing.ts\n            \n            variable\n            otelSDK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/telemetry/tracing.ts\n            \n            variable\n            traceExporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/users.args.ts\n            \n            class\n            UsersArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/entities/users.entity.ts\n            \n            entity\n            Users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/users.entity.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @mercuriusjs/gateway : ^1.2.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.0.11\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : ^2.0.4\n        \n            @nestjs/mercurius : ^12.0.11\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-fastify : ^10.2.8\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            @opentelemetry/exporter-trace-otlp-proto : ^0.45.1\n        \n            @opentelemetry/instrumentation-fastify : ^0.32.4\n        \n            @opentelemetry/instrumentation-http : ^0.45.1\n        \n            @opentelemetry/instrumentation-nestjs-core : ^0.33.3\n        \n            @opentelemetry/propagator-b3 : ^1.18.1\n        \n            @opentelemetry/resources : ^1.18.1\n        \n            @opentelemetry/sdk-node : ^0.45.1\n        \n            @opentelemetry/sdk-trace-base : ^1.18.1\n        \n            @opentelemetry/semantic-conventions : ^1.18.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            graphql : ^16.8.1\n        \n            mercurius : ^13.3.0\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nPOC Backend SCDI \nInstallation\nExample :$ npm installRunning the app\nExample :# Start the containers\n$ docker-compose up\n\n# development\n$ npm run start\n\n# watch mode (hot refresh)\n$ npm run start:devTest\nExample :# unit tests\n$ npm run test\n\n# test coverage\n$ npm run test:cov\n\n# Run hot refresh\n$ npm run start:dev\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            oltpExporter   (src/.../tracing.ts)\n                        \n                        \n                            otelSDK   (src/.../tracing.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            traceExporter   (src/.../tracing.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'fakeSecret_1234567890',\n}\n                    \n                \n\n\n        \n    \n\n    src/telemetry/tracing.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        oltpExporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new OTLPTraceExporter({\n  url: `http://srvrdtek2.eyc.com:7618/v1/traces`,\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        otelSDK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new NodeSDK({\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: `srvrdtek-tomee8`, // update this to a more relevant name for you!\n  }),\n  spanProcessor: new SimpleSpanProcessor(traceExporter),\n  instrumentations: [\n    // Fastify instrumentation expects HTTP layer to be instrumented\n    new HttpInstrumentation(),\n    new FastifyInstrumentation(),\n    new NestInstrumentation(),\n  ],\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        traceExporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : oltpExporter\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
